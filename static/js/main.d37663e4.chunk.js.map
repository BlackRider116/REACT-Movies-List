{"version":3,"sources":["components/Header/Header.jsx","redux/reducers/filmReducer.js","redux/reducers/bookmarksReducer.js","components/PaginationTag/PaginationTag.jsx","components/Film/FilmContainer.jsx","components/Bookmarks/Bookmarks.jsx","App.js","serviceWorker.js","redux/reduxStore.js","index.js","styles/styles.module.scss"],"names":["Header","className","classes","item","activeClassName","active","to","arrMoviesByName","arrMoviesByTag","initialState","films","tagNames","activeTagsName","isMaxTagsError","isNextFilmsButton","inputTextValue","hitList","isHitList","getFilmsAC","type","payload","inFavorites","onInputBodyAC","activeTagNamesAC","nextFilmButtonAC","nextButtonBoolean","arrLength","isBookmarksStateAC","itemName","getLocalItem","JSON","parse","localStorage","getItem","arrFilter","map","localItem","title","isBookmarks","filmReducer","state","action","bookmarks","isFavoritesButton","favoritesLength","length","bookmarksReducer","PaginationTag","tagFilmsThunk","portionSize","props","useState","portionNumber","setPortionNumber","leftPortionTagNumber","rightPortionTagNumber","tagStyle","tagStyleButton","onClick","filter","id","tagActive","tagStyleActive","key","name","maxTagsError","FilmContainer","onInputText","ev","body","target","value","filterFilmBody","this","getFilmsThunk","placeholder","onChange","activeTagFilmsThunk","styles","selected","setBookmarksThunk","nextFilmsButtonThunk","React","Component","connect","filmPage","textBody","dispatch","a","data","response","tags","responseTags","dataTagItem","slice","filmName","getState","stateFilms","arr","push","newFilmState","itemValue","p","setItem","stringify","filmNames","filterFilms","toLowerCase","includes","bodyTagName","stateTagNames","stateActiveTags","activeTagNames","filterTagNames","activeItem","tagActiveName","itemFilm","Bookmarks","getBookmarksThunk","deleteAllFavoritesThunk","deleteBookmarksThunk","nextFavoritesFilmsThunk","bookmarksPage","newState","removeItem","withRouter","exact","path","render","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"8LAeeA,EAXA,WACb,OACE,6BACE,yBAAKC,UAAWC,IAAQC,MACtB,kBAAC,IAAD,CAASC,gBAAiBF,IAAQG,OAAQC,GAAG,UAA7C,wCACA,kBAAC,IAAD,CAASF,gBAAiBF,IAAQG,OAAQC,GAAG,cAA7C,uD,wGCCJC,EAAkB,GAClBC,EAAiB,GAEfC,EAAe,CACjBC,MAAO,GACPC,SAAU,GACVC,eAAgB,GAChBC,gBAAgB,EAChBC,mBAAmB,EACnBC,eAAgB,GAChBC,QAAS,EACTC,WAAW,GA2BTC,EAAa,SAACR,EAAOC,EAAUI,EAAgBD,EAAmBE,EAASC,GAA9D,MACd,CAAEE,KA9CW,kBA8CMC,QAAS,CAAEV,MAAOW,EAAYX,GAAQC,WAAUI,iBAAgBD,oBAAmBE,UAASC,eAe9GK,EAAgB,SAACZ,EAAOK,EAAgBD,EAAmBE,EAASC,GAApD,MAAmE,CACrFE,KA7Dc,mBA8DdC,QAAS,CAAEV,MAAOW,EAAYX,GAAQK,iBAAgBD,oBAAmBE,UAASC,eAiBhFM,EAAmB,SAACb,EAAOC,EAAUC,EAAgBC,EAAgBC,EAAmBE,EAASC,GAA9E,MAA6F,CAClHE,KA/EoB,wBAgFpBC,QAAS,CAAEV,MAAOW,EAAYX,GAAQC,WAAUC,iBAAgBC,iBAAgBC,oBAAmBE,UAASC,eAkC1GO,EAAmB,SAACd,EAAOI,GAAR,MAA+B,CAAEK,KAjHnC,wBAiHyDT,MAAOW,EAAYX,GAAQI,sBAarGW,EAAoB,SAACC,GACvB,QAAOA,GA5He,KA+HbC,EAAqB,SAAAjB,GAAK,MAAK,CAAES,KAjIzB,sBAiI6CC,QAAS,CAAEV,WAEvEW,EAAc,SAACO,GACjB,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAErD,GAAqB,OAAjBJ,EAAuB,CACvB,IAAIK,EAAYN,EAShB,OARAC,EAAaM,KAAI,SAAAC,GACbF,EAAYA,EAAUC,KAAI,SAAAhC,GACtB,OAAIA,EAAKkC,QAAUD,EAAUC,MAClB,eAAKlC,EAAZ,CAAkBmC,aAAa,IAE5BnC,QAGR+B,EAEN,OAAON,GAGDW,EApIK,WAAmC,IAAlCC,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCAClD,OAAQA,EAAOtB,MACX,IAvBU,kBAwBV,IAvBU,mBAwBV,IAvBgB,wBAwBhB,IAtBa,sBAuBT,OAAO,eACAqB,EADP,GAEOC,EAAOrB,SAElB,IA5Be,wBA6BX,OAAO,eACAoB,EADP,CAEI9B,MAAM,GAAD,mBACE8B,EAAM9B,OADR,YAEE+B,EAAO/B,QAEdI,kBAAmB2B,EAAO3B,oBAElC,QACI,OAAO0B,I,SCnCb/B,EAAe,CACjBiC,UAAW,GACXC,mBAAmB,EACnBC,gBAAiB,GAmFfnB,EAAoB,SAACC,GACvB,QAAOA,EAAUmB,QAzFK,KAsGXC,EA9FU,WAAmC,IAAlCN,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCACvD,OAAQA,EAAOtB,MACX,IAfc,2BAgBd,IAfiB,8BAgBjB,IAdqB,kCAejB,OAAO,eACAqB,EADP,GAEOC,EAAOrB,SAElB,IApBqB,kCAqBjB,OAAO,eACAoB,EADP,CAEIE,UAAU,GAAD,mBACFF,EAAME,WADJ,YAEFD,EAAOC,YAEdC,kBAAmBF,EAAOE,oBAElC,QACI,OAAOH,I,gBCMJO,EArCO,SAAC,GAA4D,IAA1DpC,EAAyD,EAAzDA,SAAUqC,EAA+C,EAA/CA,cAA+C,IAAhCC,mBAAgC,MAAlB,EAAkB,EAAZC,EAAY,4DACxCC,mBAAS,GAD+B,mBAC3EC,EAD2E,KAC5DC,EAD4D,KAE5EC,GAAwBF,EAAgB,GAAKH,EAAc,EAC3DM,EAAwBH,EAAgBH,EAE5C,OACE,6BACGK,EAAuB,GAAK,0BAAMrD,UAAS,UAAKC,IAAQsD,SAAb,YAAyBtD,IAAQuD,gBAC7EC,QAAS,kBAAIL,EAAiBD,EAAgB,KADjB,kCAG5BzC,EACAgD,QAAO,SAAAxD,GAAI,OAAIA,EAAKyD,IAAMN,GAAwBnD,EAAKyD,IAAML,KAC7DpB,KAAI,SAAAhC,GACH,OACE,0BACEF,UACEE,EAAK0D,UAAL,UACO3D,IAAQsD,SADf,YAC2BtD,IAAQ4D,gBAC/B5D,IAAQsD,SAEdO,IAAK5D,EAAKyD,GACVF,QAAS,kBAAMV,EAAc7C,EAAK6D,QAEjC7D,EAAK6D,SAMXT,EAAwB5C,EAASkC,QAAU,0BAAM5C,UAAS,UAAKC,IAAQsD,SAAb,YAAyBtD,IAAQuD,gBAC5FC,QAAS,kBAAIL,EAAiBD,EAAgB,KADF,kCAG3CF,EAAMrC,gBAAkB,yBAAKZ,UAAWC,IAAQ+D,cAAxB,6HCrBzBC,E,4MAKJC,YAAc,SAAAC,GACZ,IAAMC,EAAOD,EAAGE,OAAOC,MACvB,EAAKrB,MAAMsB,eAAeH,I,kEAL1BI,KAAKvB,MAAMwB,kB,+BAQH,IAAD,OACP,OACE,6BACE,kBAAC,IAAD,CACEC,YAAY,mIACZJ,MAAOE,KAAKvB,MAAMnC,eAClB6D,SAAUH,KAAKN,cAEjB,kBAAC,EAAD,eACExD,SAAU8D,KAAKvB,MAAMvC,SACrBqC,cAAeyB,KAAKvB,MAAM2B,qBACtBJ,KAAKvB,QAEVuB,KAAKvB,MAAMjC,WAAa,yIAA0BwD,KAAKvB,MAAMlC,SAC7DyD,KAAKvB,MAAMxC,MAAMyB,KAAI,SAAAhC,GACpB,OACE,yBAAK4D,IAAK5D,EAAKkC,OACZlC,EAAKkC,MACN,0BAAMpC,UAAW6E,IAAOC,SACtBrB,QAAS,WACP,EAAKR,MAAM8B,kBAAkB7E,MAIV,IAArBA,EAAKmC,YAAuB,SAAM,cAM1C,6BACGmC,KAAKvB,MAAMpC,mBACV,4BAAQ4C,QAASe,KAAKvB,MAAM+B,sBAA5B,6E,GA1CgBC,IAAMC,WA+DnBC,eAbS,SAAA5C,GACtB,MAAO,CACL9B,MAAO8B,EAAM6C,SAAS3E,MACtBI,kBAAmB0B,EAAM6C,SAASvE,kBAClCC,eAAgByB,EAAM6C,SAAStE,eAC/BJ,SAAU6B,EAAM6C,SAAS1E,SACzBC,eAAgB4B,EAAM6C,SAASzE,eAC/BI,QAASwB,EAAM6C,SAASrE,QACxBC,UAAWuB,EAAM6C,SAASpE,UAC1BJ,eAAgB2B,EAAM6C,SAASxE,kBAIK,CACtC6D,cH3B2B,SAACY,EAAUtE,EAASC,GAApB,8CAAkC,WAAOsE,GAAP,qBAAAC,EAAA,sEACpCC,EADoC,cACrDC,EADqD,gBAEhCC,EAFgC,OAErDC,EAFqD,OAIvDhC,EAAK,EACHiC,EAAcD,EAAazD,KAAI,SAAChC,GAElC,MAAQ,CAAE6D,KAAM7D,EAAM0D,WAAW,EAAOD,KADxCA,MAIJ2B,EAASrE,EAAWwE,EAASI,MAAM,EApDb,IAoDoCD,EAAaP,EAAU7D,EAAkBgE,EAAK5C,QAAS7B,EAASC,IAV/D,2CAAlC,uDG4B3B+D,kBF9B+B,SAAAe,GAAQ,8CAAI,WAAOR,EAAUS,GAAjB,uBAAAR,EAAA,sDACnCS,EAAaD,IAAWX,SAAS3E,MACjCmB,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WACjDiE,EAAM,GAEW,OAAjBrE,IAAuB,EAAAqE,GAAIC,KAAJ,oBAAYtE,IACjCuE,EAAeH,EAAW9D,KAAI,SAAAhC,GAChC,GAAIA,EAAKkC,QAAU0D,EAAS1D,MAAO,CAC/B,IAAMC,GAAcnC,EAAKmC,YACnB+D,EAAS,eAAQlG,EAAR,CAAcmC,gBAG7B,OAFgB,IAAhBA,EAAuB4D,EAAIC,KAAKE,GAC5BH,EAAMA,EAAIvC,QAAO,SAAA2C,GAAC,OAAIA,EAAEjE,QAAUlC,EAAKkC,SACpCgE,EAEX,OAAOlG,KAGXoF,EAAS5D,EAAmByE,IAC5BpE,aAAauE,QAAQ,SAAUzE,KAAK0E,UAAUN,IAlBL,2CAAJ,yDE+BvC1B,eHX4B,SAACc,GAAD,8CAAc,WAAOC,GAAP,qBAAAC,EAAA,sEACjBC,EADiB,OAClCC,EADkC,OAElCe,EAAajG,EAAeqC,OAAoBrC,EAAXkF,EAErCgB,EAAcD,EAAU9C,QAAO,SAAAxD,GACjC,OAAOA,EAAKkC,MAAMsE,cAAcC,SAAStB,MAG7C/E,EAAmB+E,EAAgBoB,EAAL,GACxBzF,KAAaqE,IAAa9E,EAAeqC,QAC/C0C,EAASjE,EAAcoF,EAAYZ,MAAM,EAtEnB,IAsE0CR,EAC5D7D,EAAkBiF,EAAY7D,QAAS6D,EAAY7D,OAAQ5B,IAXvB,2CAAd,uDGY5B4D,oBHOiC,SAACgC,GAAD,8CAAiB,WAAOtB,EAAUS,GAAjB,mCAAAR,EAAA,sEACzBC,EADyB,OAiBhD,IAhBMC,EAD0C,OAE5Ce,EAAalG,EAAgBsC,OAAoBtC,EAAXmF,EACpCoB,EAAgBd,IAAWX,SAAS1E,SACpCoG,EAAkBf,IAAWX,SAASzE,eACxCoG,EAAiB,GAEfC,EAAiBH,EAAc3E,KAAI,SAAAhC,GACrC,GAAIA,EAAK6D,OAAS6C,EAAa,CAC3B,IAAIK,GAAc/G,EAAK0D,WAAakD,EAAgBlE,OAAS,EAE7D,OADIqE,GAAcF,EAAeb,KAAKhG,EAAK6D,MACpC,eAAK7D,EAAZ,CAAkB0D,UAAWqD,IAGjC,OADI/G,EAAK0D,WAAamD,EAAeb,KAAKhG,EAAK6D,MACxC7D,KAdqC,aAiB3C,IAAIgH,EAAa,KAClBV,EAAYA,EAAU9C,QAAO,SAAAxD,GACzB,OAAOA,EAAKwF,KAAKiB,SAASO,OAFlC,MAA0BH,EAA1B,eAA2C,IAM3CxG,EAAkBwG,EAAenE,OAAc4D,EAAL,GAEpCxF,KAAa+F,EAAenE,SAAWtC,EAAgBsC,QACvDhC,EAA4C,IAA3BkG,EAAgBlE,QAA0C,IAA1BmE,EAAenE,OACtE0C,EAAShE,EAAiBkF,EAAUX,MAAM,EA1GpB,IA0G2CmB,EAAgBD,EAAgBnG,EAC7FY,EAAkBgF,EAAU5D,QAASrC,EAAeqC,OAAQ5B,IA5BhB,4CAAjB,yDGNjCgE,qBHuCkC,yDAAM,WAAOM,EAAUS,GAAjB,iBAAAR,EAAA,yDAClChD,EAAQwD,IAAWX,SAAS3E,MACfF,EAAeqC,OAFM,gCAES4C,EAFT,8CAEgBjF,EAFhB,OAElCiG,EAFkC,KAItCjE,EAAML,KAAI,SAAAiF,GACNX,EAAYA,EAAU9C,QAAO,SAAAxD,GAAI,OAAIA,EAAKkC,QAAU+E,EAAS/E,YAGjEkD,EAAS/D,EAAiBiF,EAAUX,MAAM,EAxHpB,IAwH2CrE,EAAkBgF,EAAU5D,UARvD,4CAAN,0DG5CrBuC,CAMZlB,GCzEGmD,E,kLAEF5C,KAAKvB,MAAMoE,sB,+BAGH,IAAD,OACP,OACE,6BACkC,IAA/B7C,KAAKvB,MAAMN,iBACV,8FACe6B,KAAKvB,MAAMN,gBAD1B,8CAEE,4BAAQc,QAASe,KAAKvB,MAAMqE,yBAA5B,0FAKH9C,KAAKvB,MAAMR,UAAUP,KAAI,SAAAhC,GACxB,OACE,yBAAK4D,IAAK5D,EAAKkC,OACZlC,EAAKkC,MACN,0BACEpC,UAAW6E,IAAOC,SAClBrB,QAAS,kBAAM,EAAKR,MAAMsE,qBAAqBrH,KAFjD,cASLsE,KAAKvB,MAAMP,mBACV,4BAAQe,QAASe,KAAKvB,MAAMuE,yBAA5B,4E,GA9BcvC,IAAMC,WA+CfC,eARS,SAAA5C,GACtB,MAAO,CACLE,UAAWF,EAAMkF,cAAchF,UAC/BC,kBAAmBH,EAAMkF,cAAc/E,kBACvCC,gBAAiBJ,EAAMkF,cAAc9E,mBAID,CACtC0E,kBHhB+B,kBAAM,SAAC/B,GACpC,IALkB7C,EAAWC,EAAmBC,EAK1Cf,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAChC,OAAjBJ,GACA0D,GAPc7C,EAOQb,EAAaiE,MAAM,EAtCvB,IA+BOnD,EAOuClB,EAAkBI,GAPtCe,EAOqDf,EAAagB,OAP7C,CACrE1B,KArCkB,2BAsClBC,QAAS,CAAEsB,YAAWC,oBAAmBC,wBGmB3C4E,qBHgBkC,SAACzB,GAAD,OAAc,SAAAR,GAC9C,IANqB7C,EAAWC,EAAmBC,EAO7C+E,EADe7F,KAAKC,MAAMC,aAAaC,QAAQ,WACvB0B,QAAO,SAAAxD,GAAI,OAAIA,EAAKkC,QAAU0D,EAAS1D,SACrEL,aAAauE,QAAQ,SAAUzE,KAAK0E,UAAUmB,IAC9CpC,GATqB7C,EASIiF,EAAS7B,MAAM,EAxElB,IA+DUnD,EAS+BlB,EAAkBkG,GAT9B/E,EASyC+E,EAAS9E,OAT7B,CACxE1B,KApEqB,8BAqErBC,QAAS,CAAEsB,YAAWC,oBAAmBC,wBGZ3C6E,wBHwBqC,kBAAM,SAAClC,EAAUS,GACpD,IAHwBtD,EAAWC,EAG/Bd,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WACrC+D,IAAW0B,cAAchF,UAEjCP,KAAI,SAAAiF,GACNvF,EAAeA,EAAa8B,QAAO,SAAAxD,GAAI,OAAIA,EAAKkC,QAAU+E,EAAS/E,YAGvEkD,GAVwB7C,EAUIb,EAAaiE,MAAM,EArFzB,IA2EanD,EAUmClB,EAAkBI,GAV9B,CAAEV,KA9EnC,kCA8E+DuB,YAAWC,yBGrBrG4E,wBH2CqC,kBAAM,SAAAhC,GACzCvD,aAAa4F,WAAW,UACxBrC,EAP2E,CAC3EpE,KA/FyB,kCAgGzBC,QAAS,CAAEsB,UAKiB,GALNC,mBAKU,EALSC,gBAKF,QGjD5BwC,CAKZiC,GCxCYQ,mBAff,WACE,OACE,yBAAK5H,UAAU,OACb,kBAAC,EAAD,MACA,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6H,OAAK,EAACC,KAAK,KAAI,kBAAC,IAAD,CAAUzH,GAAG,YACnC,kBAAC,IAAD,CAAOyH,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,aAAaC,OAAQ,kBAAM,kBAAC,EAAD,eCH7BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCbAC,EAAWC,YAAgB,CAC/BlD,SAAU9C,EACVmF,cAAe5E,IAMF0F,EAFHC,YAAYH,EAAUI,YAAgBC,MCFlDC,IAASZ,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUQ,MAAOA,GACf,kBAAC,EAAD,QAGJK,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,sxmDGxI5BC,EAAOC,QAAU,CAAC,KAAO,qBAAqB,OAAS,uBAAuB,SAAW,yBAAyB,eAAiB,+BAA+B,eAAiB,+BAA+B,aAAe,6BAA6B,SAAW,2B","file":"static/js/main.d37663e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from '../../styles/styles.module.scss'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav>\r\n      <div className={classes.item}>\r\n        <NavLink activeClassName={classes.active} to=\"/films\">Фильмы</NavLink>\r\n        <NavLink activeClassName={classes.active} to=\"/bookmarks\">Закладки</NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import data from '../../taksnetJSON/films.json'\r\nimport tags from \"../../taksnetJSON/tags.json\";\r\n\r\nconst GET_FILMS = '/films/GET_FILM'\r\nconst TEXT_BODY = '/films/TEXT_BODY'\r\nconst ACTIVE_TAG_NAME = '/film/ACTIVE_TAG_NAME'\r\nconst GET_NEXT_FILMS = '/films/GET_NEXT_FILMS'\r\nconst IS_BOOKMARKS = '/films/IS_BOOKMARKS'\r\n\r\nconst lengthOfMovieList = 15\r\nlet arrMoviesByName = []\r\nlet arrMoviesByTag = []\r\n\r\nconst initialState = {\r\n    films: [],\r\n    tagNames: [],\r\n    activeTagsName: [],\r\n    isMaxTagsError: false,\r\n    isNextFilmsButton: false,\r\n    inputTextValue: '',\r\n    hitList: 0,\r\n    isHitList: false\r\n}\r\n\r\nconst filmReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n        case TEXT_BODY:\r\n        case ACTIVE_TAG_NAME:\r\n        case IS_BOOKMARKS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case GET_NEXT_FILMS:\r\n            return {\r\n                ...state,\r\n                films: [\r\n                    ...state.films,\r\n                    ...action.films\r\n                ],\r\n                isNextFilmsButton: action.isNextFilmsButton\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getFilmsAC = (films, tagNames, inputTextValue, isNextFilmsButton, hitList, isHitList) =>\r\n    ({ type: GET_FILMS, payload: { films: inFavorites(films), tagNames, inputTextValue, isNextFilmsButton, hitList, isHitList } })\r\n\r\nexport const getFilmsThunk = (textBody, hitList, isHitList) => async (dispatch) => {\r\n    const response = await data\r\n    const responseTags = await tags\r\n\r\n    let id = 0\r\n    const dataTagItem = responseTags.map((item) => {\r\n        id++\r\n        return ({ name: item, tagActive: false, id })\r\n    })\r\n\r\n    dispatch(getFilmsAC(response.slice(0, lengthOfMovieList), dataTagItem, textBody, nextButtonBoolean(data.length), hitList, isHitList))\r\n}\r\n\r\nconst onInputBodyAC = (films, inputTextValue, isNextFilmsButton, hitList, isHitList) => ({\r\n    type: TEXT_BODY,\r\n    payload: { films: inFavorites(films), inputTextValue, isNextFilmsButton, hitList, isHitList }\r\n})\r\n\r\nexport const filterFilmBody = (textBody) => async (dispatch) => {\r\n    const response = await data\r\n    const filmNames = !arrMoviesByTag.length ? response : arrMoviesByTag\r\n\r\n    const filterFilms = filmNames.filter(item => {\r\n        return item.title.toLowerCase().includes(textBody)\r\n    })\r\n\r\n    arrMoviesByName = !textBody ? [] : filterFilms\r\n    const isHitList = !textBody && !arrMoviesByTag.length ? false : true\r\n    dispatch(onInputBodyAC(filterFilms.slice(0, lengthOfMovieList), textBody,\r\n        nextButtonBoolean(filterFilms.length), filterFilms.length, isHitList))\r\n}\r\n\r\nconst activeTagNamesAC = (films, tagNames, activeTagsName, isMaxTagsError, isNextFilmsButton, hitList, isHitList) => ({\r\n    type: ACTIVE_TAG_NAME,\r\n    payload: { films: inFavorites(films), tagNames, activeTagsName, isMaxTagsError, isNextFilmsButton, hitList, isHitList }\r\n})\r\n\r\nexport const activeTagFilmsThunk = (bodyTagName) => async (dispatch, getState) => {\r\n    const response = await data\r\n    let filmNames = !arrMoviesByName.length ? response : arrMoviesByName\r\n    const stateTagNames = getState().filmPage.tagNames\r\n    const stateActiveTags = getState().filmPage.activeTagsName\r\n    let activeTagNames = []\r\n\r\n    const filterTagNames = stateTagNames.map(item => {\r\n        if (item.name === bodyTagName) {\r\n            let activeItem = !item.tagActive && stateActiveTags.length < 3 ? true : false\r\n            if (activeItem) { activeTagNames.push(item.name) }\r\n            return { ...item, tagActive: activeItem };\r\n        }\r\n        if (item.tagActive) { activeTagNames.push(item.name) }\r\n        return item\r\n    })\r\n\r\n    for (let tagActiveName of activeTagNames) {\r\n        filmNames = filmNames.filter(item => {\r\n            return item.tags.includes(tagActiveName)\r\n        })\r\n    }\r\n\r\n    arrMoviesByTag = !activeTagNames.length ? [] : filmNames\r\n\r\n    const isHitList = !activeTagNames.length && !arrMoviesByName.length ? false : true\r\n    const isMaxTagsError = stateActiveTags.length === 3 && activeTagNames.length === 3 ? true : false\r\n    dispatch(activeTagNamesAC(filmNames.slice(0, lengthOfMovieList), filterTagNames, activeTagNames, isMaxTagsError,\r\n        nextButtonBoolean(filmNames.length), arrMoviesByTag.length, isHitList))\r\n}\r\n\r\nconst nextFilmButtonAC = (films, isNextFilmsButton) => ({ type: GET_NEXT_FILMS, films: inFavorites(films), isNextFilmsButton })\r\n\r\nexport const nextFilmsButtonThunk = () => async (dispatch, getState) => {\r\n    let state = getState().filmPage.films\r\n    let filmNames = !arrMoviesByTag.length ? await data : arrMoviesByTag\r\n\r\n    state.map(itemFilm => {\r\n        filmNames = filmNames.filter(item => item.title !== itemFilm.title)\r\n    })\r\n\r\n    dispatch(nextFilmButtonAC(filmNames.slice(0, lengthOfMovieList), nextButtonBoolean(filmNames.length)))\r\n}\r\n\r\nconst nextButtonBoolean = (arrLength) => {\r\n    return arrLength <= lengthOfMovieList ? false : true\r\n}\r\n\r\nexport const isBookmarksStateAC = films => ({ type: IS_BOOKMARKS, payload: { films } })\r\n\r\nconst inFavorites = (itemName) => {\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n\r\n    if (getLocalItem !== null) {\r\n        let arrFilter = itemName\r\n        getLocalItem.map(localItem => {\r\n            arrFilter = arrFilter.map(item => {\r\n                if (item.title === localItem.title) {\r\n                    return { ...item, isBookmarks: true }\r\n                }\r\n                return item\r\n            })\r\n        })\r\n        return arrFilter\r\n    }\r\n    else return itemName\r\n}\r\n\r\nexport default filmReducer;","import { isBookmarksStateAC } from \"./filmReducer\"\r\n\r\nconst GET_BOOKMARKS = '/bookmarks/GET_BOOKMARKS'\r\nconst DELETE_BOOKMARKS = '/bookmarks/DELETE_BOOKMARKS'\r\nconst NEXT_FAVORITES_FILMS = '/bookmarks/NEXT_FAVORITES_FILMS'\r\nconst DELETE_ALL_FAVORITES = '/bookmarks/DELETE_ALL_FAVORITES'\r\n\r\nconst lengthOfMovieList = 15\r\n\r\nconst initialState = {\r\n    bookmarks: [],\r\n    isFavoritesButton: false,\r\n    favoritesLength: 0\r\n}\r\n\r\nconst bookmarksReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_BOOKMARKS:\r\n        case DELETE_BOOKMARKS:\r\n        case DELETE_ALL_FAVORITES:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case NEXT_FAVORITES_FILMS:\r\n            return {\r\n                ...state,\r\n                bookmarks: [\r\n                    ...state.bookmarks,\r\n                    ...action.bookmarks\r\n                ],\r\n                isFavoritesButton: action.isFavoritesButton\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getBookmarks = (bookmarks, isFavoritesButton, favoritesLength) => ({\r\n    type: GET_BOOKMARKS,\r\n    payload: { bookmarks, isFavoritesButton, favoritesLength }\r\n})\r\nexport const getBookmarksThunk = () => (dispatch) => {\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n    if (getLocalItem !== null) {\r\n        dispatch(getBookmarks(getLocalItem.slice(0, lengthOfMovieList), nextButtonBoolean(getLocalItem), getLocalItem.length))\r\n    }\r\n}\r\n\r\nexport const setBookmarksThunk = filmName => async (dispatch, getState) => {\r\n    const stateFilms = getState().filmPage.films\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n    let arr = []\r\n\r\n    if (getLocalItem !== null) arr.push(...getLocalItem)\r\n    const newFilmState = stateFilms.map(item => {\r\n        if (item.title === filmName.title) {\r\n            const isBookmarks = item.isBookmarks ? false : true\r\n            const itemValue = { ...item, isBookmarks }\r\n            isBookmarks === true ? arr.push(itemValue) :\r\n                arr = arr.filter(p => p.title !== item.title)\r\n            return itemValue\r\n        }\r\n        return item\r\n    })\r\n\r\n    dispatch(isBookmarksStateAC(newFilmState))\r\n    localStorage.setItem('Movies', JSON.stringify(arr))\r\n}\r\n\r\nconst deleteBookmarks = (bookmarks, isFavoritesButton, favoritesLength) => ({\r\n    type: DELETE_BOOKMARKS,\r\n    payload: { bookmarks, isFavoritesButton, favoritesLength }\r\n})\r\n\r\nexport const deleteBookmarksThunk = (filmName) => dispatch => {\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n    const newState = getLocalItem.filter(item => item.title !== filmName.title)\r\n    localStorage.setItem('Movies', JSON.stringify(newState))\r\n    dispatch(deleteBookmarks(newState.slice(0, lengthOfMovieList), nextButtonBoolean(newState), newState.length))\r\n}\r\n\r\nconst nextFavoritesFilms = (bookmarks, isFavoritesButton) => ({ type: NEXT_FAVORITES_FILMS, bookmarks, isFavoritesButton })\r\n\r\nexport const nextFavoritesFilmsThunk = () => (dispatch, getState) => {\r\n    let getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n    const state = getState().bookmarksPage.bookmarks\r\n\r\n    state.map(itemFilm => {\r\n        getLocalItem = getLocalItem.filter(item => item.title !== itemFilm.title)\r\n    })\r\n\r\n    dispatch(nextFavoritesFilms(getLocalItem.slice(0, lengthOfMovieList), nextButtonBoolean(getLocalItem)))\r\n}\r\n\r\nconst nextButtonBoolean = (arrLength) => {\r\n    return arrLength.length <= lengthOfMovieList ? false : true\r\n}\r\n\r\nconst deleteAllFavorites = (bookmarks, isFavoritesButton, favoritesLength) => ({\r\n    type: DELETE_ALL_FAVORITES,\r\n    payload: { bookmarks, isFavoritesButton, favoritesLength }\r\n})\r\n\r\nexport const deleteAllFavoritesThunk = () => dispatch => {\r\n    localStorage.removeItem('Movies');\r\n    dispatch(deleteAllFavorites([], false, 0))\r\n}\r\n\r\nexport default bookmarksReducer;","import React, { useState } from \"react\";\r\nimport classes from \"../../styles/styles.module.scss\";\r\n\r\nconst PaginationTag = ({ tagNames, tagFilmsThunk, portionSize = 6, ...props }) => {\r\n  let [portionNumber, setPortionNumber] = useState(1)\r\n  let leftPortionTagNumber = (portionNumber - 1) * portionSize + 1\r\n  let rightPortionTagNumber = portionNumber * portionSize\r\n\r\n  return (\r\n    <div>\r\n      {leftPortionTagNumber > 1 && <span className={`${classes.tagStyle} ${classes.tagStyleButton}`} \r\n      onClick={()=>setPortionNumber(portionNumber - 1)} >НАЗАД</span>}\r\n\r\n      {tagNames\r\n      .filter(item => item.id >= leftPortionTagNumber && item.id <= rightPortionTagNumber)\r\n      .map(item => {\r\n        return (\r\n          <span\r\n            className={\r\n              item.tagActive\r\n                ? `${classes.tagStyle} ${classes.tagStyleActive}`\r\n                : classes.tagStyle\r\n            }\r\n            key={item.id}\r\n            onClick={() => tagFilmsThunk(item.name)}\r\n          >\r\n            {item.name}\r\n          </span>\r\n          \r\n        );\r\n      })}\r\n\r\n      {rightPortionTagNumber < tagNames.length && <span className={`${classes.tagStyle} ${classes.tagStyleButton}`} \r\n      onClick={()=>setPortionNumber(portionNumber + 1)} >ДАЛЕЕ</span>}\r\n\r\n      {props.isMaxTagsError && <div className={classes.maxTagsError} >Выбрано максимум 3 тега!</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationTag;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getFilmsThunk,\r\n  filterFilmBody,\r\n  activeTagFilmsThunk,\r\n  nextFilmsButtonThunk\r\n} from \"../../redux/reducers/filmReducer\";\r\n\r\nimport styles from \"../../styles/styles.module.scss\";\r\nimport { Input } from \"antd\";\r\nimport { setBookmarksThunk } from \"../../redux/reducers/bookmarksReducer\";\r\nimport PaginationTag from \"../PaginationTag/PaginationTag.jsx\";\r\n\r\nclass FilmContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getFilmsThunk();\r\n  }\r\n\r\n  onInputText = ev => {\r\n    const body = ev.target.value;\r\n    this.props.filterFilmBody(body);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Input\r\n          placeholder=\"Введите название фильма\"\r\n          value={this.props.inputTextValue}\r\n          onChange={this.onInputText}\r\n        />\r\n        <PaginationTag\r\n          tagNames={this.props.tagNames}\r\n          tagFilmsThunk={this.props.activeTagFilmsThunk}\r\n          {...this.props}\r\n        />\r\n        {this.props.isHitList && <div>Найдено совпадений: {this.props.hitList}</div> }\r\n        {this.props.films.map(item => {\r\n          return (\r\n            <div key={item.title}>\r\n              {item.title}\r\n              <span className={styles.selected}\r\n                onClick={() => {\r\n                  this.props.setBookmarksThunk(item);\r\n                }}\r\n              >\r\n  \r\n               {item.isBookmarks === true ? '★' : '☆' }\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div>\r\n          {this.props.isNextFilmsButton && (\r\n            <button onClick={this.props.nextFilmsButtonThunk}>Показать еще</button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    films: state.filmPage.films,\r\n    isNextFilmsButton: state.filmPage.isNextFilmsButton,\r\n    inputTextValue: state.filmPage.inputTextValue,\r\n    tagNames: state.filmPage.tagNames,\r\n    activeTagsName: state.filmPage.activeTagsName,\r\n    hitList: state.filmPage.hitList,\r\n    isHitList: state.filmPage.isHitList,\r\n    isMaxTagsError: state.filmPage.isMaxTagsError,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getFilmsThunk,\r\n  setBookmarksThunk,\r\n  filterFilmBody,\r\n  activeTagFilmsThunk,\r\n  nextFilmsButtonThunk\r\n})(FilmContainer);\r\n","import React from \"react\";\r\nimport styles from \"../../styles/styles.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getBookmarksThunk,\r\n  deleteBookmarksThunk,\r\n  nextFavoritesFilmsThunk,\r\n  deleteAllFavoritesThunk\r\n} from \"../../redux/reducers/bookmarksReducer\";\r\n\r\nclass Bookmarks extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getBookmarksThunk();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.favoritesLength !== 0 && (\r\n          <div>\r\n            В избранном {this.props.favoritesLength} фильмов\r\n            <button onClick={this.props.deleteAllFavoritesThunk}>\r\n              Очистить список\r\n            </button>\r\n          </div>\r\n        )}\r\n        {this.props.bookmarks.map(item => {\r\n          return (\r\n            <div key={item.title}>\r\n              {item.title}\r\n              <span\r\n                className={styles.selected}\r\n                onClick={() => this.props.deleteBookmarksThunk(item)}\r\n              >\r\n                ★\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n        {this.props.isFavoritesButton && (\r\n          <button onClick={this.props.nextFavoritesFilmsThunk}>\r\n            Показать еще\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    bookmarks: state.bookmarksPage.bookmarks,\r\n    isFavoritesButton: state.bookmarksPage.isFavoritesButton,\r\n    favoritesLength: state.bookmarksPage.favoritesLength\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getBookmarksThunk,\r\n  deleteBookmarksThunk,\r\n  nextFavoritesFilmsThunk,\r\n  deleteAllFavoritesThunk\r\n})(Bookmarks);\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport { Route, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport FilmContainer from './components/Film/FilmContainer.jsx'\nimport Bookmarks from './components/Bookmarks/Bookmarks.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div>\n        <Switch>\n          <Route exact path=\"/\"><Redirect to=\"/films\" /></Route>\n          <Route path='/films' render={() => <FilmContainer />} />\n          <Route path='/bookmarks' render={() => <Bookmarks />} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport filmReducer from \"./reducers/filmReducer\";\r\nimport bookmarksReducer from \"./reducers/bookmarksReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  filmPage: filmReducer,\r\n  bookmarksPage: bookmarksReducer,\r\n});\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/reduxStore\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"styles_item__BHFkE\",\"active\":\"styles_active__3gQU6\",\"tagStyle\":\"styles_tagStyle__2RCl8\",\"tagStyleActive\":\"styles_tagStyleActive__2A714\",\"tagStyleButton\":\"styles_tagStyleButton__1i3db\",\"maxTagsError\":\"styles_maxTagsError__2zouh\",\"selected\":\"styles_selected__1YvCo\"};"],"sourceRoot":""}