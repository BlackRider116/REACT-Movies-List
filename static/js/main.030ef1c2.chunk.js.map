{"version":3,"sources":["components/Header/Header.jsx","redux/reducers/filmReducer.js","redux/reducers/bookmarksReducer.js","components/PaginationTag/PaginationTag.jsx","components/Film/FilmContainer.jsx","components/Bookmarks/Bookmarks.jsx","App.js","serviceWorker.js","redux/reduxStore.js","index.js","styles/styles.module.scss"],"names":["Header","className","classes","item","activeClassName","active","to","filmNamesToFilter","initialState","films","tagNames","activeTagsName","isMaxTagsError","isNextFilmsButton","inputTextValue","hitList","isHitList","getFilms","type","payload","inFavorites","getFilmsThunk","textBody","dispatch","a","data","response","tags","responseTags","id","dataTagItem","map","name","tagActive","slice","nextButtonBoolean","length","onInputBody","activeTagNames","nextFilmButton","arrLength","isBookmarksState","itemName","getLocalItem","JSON","parse","localStorage","getItem","arrFilter","localItem","title","isBookmarks","filmReducer","state","action","bookmarks","isFavoritesButton","favoritesLength","bookmarksReducer","PaginationTag","tagFilmsThunk","portionSize","props","useState","portionNumber","setPortionNumber","leftPortionTagNumber","rightPortionTagNumber","tagStyle","tagStyleButton","onClick","filter","tagStyleActive","key","maxTagsError","FilmContainer","onInputText","ev","body","target","value","filterFilmBody","this","placeholder","onChange","activeTagFilmsThunk","styles","selected","setBookmarksThunk","nextFilmsButtonThunk","React","Component","connect","filmPage","filmName","getState","stateFilms","arr","push","newFilmState","itemValue","p","setItem","stringify","stateTagNames","filterFilms","toLowerCase","includes","filterTagNames","bodyTagName","stateActiveTags","activeNames","activeItem","tagActiveName","filmNames","itemFilm","Bookmarks","getBookmarksThunk","deleteAllFavoritesThunk","deleteBookmarksThunk","nextFavoritesFilmsThunk","bookmarksPage","newState","removeItem","withRouter","exact","path","render","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"8LAeeA,EAXA,WACb,OACE,6BACE,yBAAKC,UAAWC,IAAQC,MACtB,kBAAC,IAAD,CAASC,gBAAiBF,IAAQG,OAAQC,GAAG,UAA7C,wCACA,kBAAC,IAAD,CAASF,gBAAiBF,IAAQG,OAAQC,GAAG,cAA7C,uD,wGCCJC,EAAoB,GAElBC,EAAe,CACjBC,MAAO,GACPC,SAAU,GACVC,eAAgB,GAChBC,gBAAgB,EAChBC,mBAAmB,EACnBC,eAAgB,GAChBC,QAAS,EACTC,WAAW,GA2BTC,EAAW,SAACR,EAAOC,EAAUI,EAAgBD,EAAmBE,EAASC,GAA9D,MACZ,CAAEE,KA7CW,kBA6CMC,QAAS,CAAEV,MAAOW,EAAYX,GAAQC,WAAUI,iBAAgBD,oBAAmBE,UAASC,eAEvGK,EAAgB,SAACC,EAAUP,EAASC,GAApB,8CAAkC,WAAOO,GAAP,qBAAAC,EAAA,sEACpCC,EADoC,cACrDC,EADqD,gBAEhCC,EAFgC,OAErDC,EAFqD,OAIvDC,EAAK,EACHC,EAAcF,EAAaG,KAAI,SAAC5B,GAElC,MAAQ,CAAE6B,KAAM7B,EAAM8B,WAAW,EAAOJ,KADxCA,MAIJN,EAASN,EAASS,EAASQ,MAAM,EAnDX,IAmDkCJ,EAAaR,EAAUa,EAAkBV,EAAKW,QAASrB,EAASC,IAV7D,2CAAlC,uDAavBqB,EAAc,SAAC5B,EAAOK,EAAgBD,EAAmBE,EAASC,EAAWN,GAA/D,MAA6E,CAC7FQ,KA5Dc,mBA6DdC,QAAS,CAAEV,MAAOW,EAAYX,GAAQK,iBAAgBD,oBAAmBE,UAASC,YAAWN,cAuB3F4B,EAAiB,SAAC7B,EAAOC,EAAUC,EAAgBC,EAAgBC,EAAmBE,EAASC,EAAWF,GAAzF,MAA6G,CAChII,KApFoB,wBAqFpBC,QAAS,CAAEV,MAAOW,EAAYX,GAAQC,WAAUC,iBAAgBC,iBAAgBC,oBAAmBE,UAASC,YAAWF,oBAgCrHyB,EAAiB,SAAC9B,EAAOI,GAAR,MAA+B,CAAEK,KApHjC,wBAoHuDT,MAAOW,EAAYX,GAAQI,sBAcnGsB,EAAoB,SAACK,GACvB,QAAOA,GAhIe,KAmIbC,EAAmB,SAAAhC,GAAK,MAAK,CAAES,KArIvB,sBAqI2CC,QAAS,CAAEV,WAErEW,EAAc,SAACsB,GACjB,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAErD,GAAqB,OAAjBJ,EAAuB,CACvB,IAAIK,EAAYN,EAShB,OARAC,EAAaZ,KAAI,SAAAkB,GACbD,EAAYA,EAAUjB,KAAI,SAAA5B,GACtB,OAAIA,EAAK+C,QAAUD,EAAUC,MAClB,eAAK/C,EAAZ,CAAkBgD,aAAa,IAE5BhD,QAGR6C,EAEN,OAAON,GAGDU,EAzIK,WAAmC,IAAlCC,EAAiC,uDAAzB7C,EAAc8C,EAAW,uCAClD,OAAQA,EAAOpC,MACX,IAtBU,kBAuBV,IAtBU,mBAuBV,IAtBgB,wBAuBhB,IArBa,sBAsBT,OAAO,eACAmC,EADP,GAEOC,EAAOnC,SAElB,IA3Be,wBA4BX,OAAO,eACAkC,EADP,CAEI5C,MAAM,GAAD,mBACE4C,EAAM5C,OADR,YAEE6C,EAAO7C,QAEdI,kBAAmByC,EAAOzC,oBAElC,QACI,OAAOwC,I,SClCb7C,EAAe,CACjB+C,UAAW,GACXC,mBAAmB,EACnBC,gBAAiB,GAmFftB,EAAoB,SAACK,GACvB,QAAOA,EAAUJ,QAzFK,KAsGXsB,EA9FU,WAAmC,IAAlCL,EAAiC,uDAAzB7C,EAAc8C,EAAW,uCACvD,OAAQA,EAAOpC,MACX,IAfc,2BAgBd,IAfiB,8BAgBjB,IAdqB,kCAejB,OAAO,eACAmC,EADP,GAEOC,EAAOnC,SAElB,IApBqB,kCAqBjB,OAAO,eACAkC,EADP,CAEIE,UAAU,GAAD,mBACFF,EAAME,WADJ,YAEFD,EAAOC,YAEdC,kBAAmBF,EAAOE,oBAElC,QACI,OAAOH,I,gBCMJM,EArCO,SAAC,GAA4D,IAA1DjD,EAAyD,EAAzDA,SAAUkD,EAA+C,EAA/CA,cAA+C,IAAhCC,mBAAgC,MAAlB,EAAkB,EAAZC,EAAY,4DACxCC,mBAAS,GAD+B,mBAC3EC,EAD2E,KAC5DC,EAD4D,KAE5EC,GAAwBF,EAAgB,GAAKH,EAAc,EAC3DM,EAAwBH,EAAgBH,EAE5C,OACE,6BACGK,EAAuB,GAAK,0BAAMjE,UAAS,UAAKC,IAAQkE,SAAb,YAAyBlE,IAAQmE,gBAC7EC,QAAS,kBAAIL,EAAiBD,EAAgB,KADjB,kCAG5BtD,EACA6D,QAAO,SAAApE,GAAI,OAAIA,EAAK0B,IAAMqC,GAAwB/D,EAAK0B,IAAMsC,KAC7DpC,KAAI,SAAA5B,GACH,OACE,0BACEF,UACEE,EAAK8B,UAAL,UACO/B,IAAQkE,SADf,YAC2BlE,IAAQsE,gBAC/BtE,IAAQkE,SAEdK,IAAKtE,EAAK0B,GACVyC,QAAS,kBAAMV,EAAczD,EAAK6B,QAEjC7B,EAAK6B,SAMXmC,EAAwBzD,EAAS0B,QAAU,0BAAMnC,UAAS,UAAKC,IAAQkE,SAAb,YAAyBlE,IAAQmE,gBAC5FC,QAAS,kBAAIL,EAAiBD,EAAgB,KADF,kCAG3CF,EAAMlD,gBAAkB,yBAAKX,UAAWC,IAAQwE,cAAxB,6HCrBzBC,E,4MAKJC,YAAc,SAAAC,GACZ,IAAMC,EAAOD,EAAGE,OAAOC,MACvB,EAAKlB,MAAMmB,eAAeH,I,kEAL1BI,KAAKpB,MAAMzC,kB,+BAQH,IAAD,OACP,OACE,6BACE,kBAAC,IAAD,CACE8D,YAAY,mIACZH,MAAOE,KAAKpB,MAAMhD,eAClBsE,SAAUF,KAAKN,cAEjB,kBAAC,EAAD,eACElE,SAAUwE,KAAKpB,MAAMpD,SACrBkD,cAAesB,KAAKpB,MAAMuB,qBACtBH,KAAKpB,QAEVoB,KAAKpB,MAAM9C,WAAa,yIAA0BkE,KAAKpB,MAAM/C,SAC7DmE,KAAKpB,MAAMrD,MAAMsB,KAAI,SAAA5B,GACpB,OACE,yBAAKsE,IAAKtE,EAAK+C,OACZ/C,EAAK+C,MACN,0BAAMjD,UAAWqF,IAAOC,SACtBjB,QAAS,WACP,EAAKR,MAAM0B,kBAAkBrF,MAIV,IAArBA,EAAKgD,YAAuB,SAAM,cAM1C,6BACG+B,KAAKpB,MAAMjD,mBACV,4BAAQyD,QAASY,KAAKpB,MAAM2B,sBAA5B,6E,GA1CgBC,IAAMC,WA+DnBC,eAbS,SAAAvC,GACtB,MAAO,CACL5C,MAAO4C,EAAMwC,SAASpF,MACtBI,kBAAmBwC,EAAMwC,SAAShF,kBAClCC,eAAgBuC,EAAMwC,SAAS/E,eAC/BJ,SAAU2C,EAAMwC,SAASnF,SACzBC,eAAgB0C,EAAMwC,SAASlF,eAC/BI,QAASsC,EAAMwC,SAAS9E,QACxBC,UAAWqC,EAAMwC,SAAS7E,UAC1BJ,eAAgByC,EAAMwC,SAASjF,kBAIK,CACtCS,gBACAmE,kBF9B+B,SAAAM,GAAQ,8CAAI,WAAOvE,EAAUwE,GAAjB,uBAAAvE,EAAA,sDACnCwE,EAAaD,IAAWF,SAASpF,MACjCkC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WACjDkD,EAAM,GAEW,OAAjBtD,IAAuB,EAAAsD,GAAIC,KAAJ,oBAAYvD,IACjCwD,EAAeH,EAAWjE,KAAI,SAAA5B,GAChC,GAAIA,EAAK+C,QAAU4C,EAAS5C,MAAO,CAC/B,IAAMC,GAAchD,EAAKgD,YACnBiD,EAAS,eAAQjG,EAAR,CAAcgD,gBAG7B,OAFgB,IAAhBA,EAAuB8C,EAAIC,KAAKE,GAC5BH,EAAMA,EAAI1B,QAAO,SAAA8B,GAAC,OAAIA,EAAEnD,QAAU/C,EAAK+C,SACpCkD,EAEX,OAAOjG,KAGXoB,EAASkB,EAAiB0D,IAC1BrD,aAAawD,QAAQ,SAAU1D,KAAK2D,UAAUN,IAlBL,2CAAJ,yDE+BvChB,eHZ4B,SAAC3D,GAAD,8CAAc,WAAOC,EAAUwE,GAAjB,qBAAAvE,EAAA,sEACjBC,EADiB,OAClCC,EADkC,OAElC8E,EAAgBT,IAAWF,SAASnF,SACpC+F,EAAc/E,EAAS6C,QAAO,SAAApE,GAChC,OAAOA,EAAK+C,MAAMwD,cAAcC,SAASrF,MAGvCsF,EAAiBJ,EAAczE,KAAI,SAAA5B,GACrC,OAAuB,IAAnBA,EAAK8B,UACE,eAAK9B,EAAZ,CAAkB8B,WAAW,IAE1B9B,KAGXI,EAAoBkG,EAAYrE,SAAWV,EAASU,OAAS,GAAKqE,EAG5DlF,EADLD,EACce,EAAYoE,EAAYvE,MAAM,EA5EvB,IA4E8CZ,EAAUa,EAAkBsE,EAAYrE,QAAS7B,EAAkB6B,QAAQ,EAAMwE,GADhIvF,EAAcC,EAAUf,EAAkB6B,QAAQ,IAhB/B,2CAAd,yDGa5BiD,oBHYiC,SAACwB,GAAD,8CAAiB,WAAOtF,EAAUwE,GAAjB,iCAAAvE,EAAA,sEAC1BC,EAD0B,OAgBhD,IAfIuB,EAD4C,OAE1CwD,EAAgBT,IAAWF,SAASnF,SACpCoG,EAAkBf,IAAWF,SAASlF,eACxCoG,EAAc,GAEZH,EAAiBJ,EAAczE,KAAI,SAAA5B,GACrC,GAAIA,EAAK6B,OAAS6E,EAAa,CAC3B,IAAIG,GAAc7G,EAAK8B,WAAa6E,EAAgB1E,OAAS,EAE7D,OADI4E,GAAcD,EAAYb,KAAK/F,EAAK6B,MACjC,eAAK7B,EAAZ,CAAkB8B,UAAW+E,IAGjC,OADI7G,EAAK8B,WAAa8E,EAAYb,KAAK/F,EAAK6B,MACrC7B,KAbqC,aAgB3C,IAAI8G,EAAa,KAClBjE,EAAYA,EAAUuB,QAAO,SAAApE,GACzB,OAAOA,EAAKwB,KAAKgF,SAASM,OAFlC,MAA0BF,EAA1B,eAAwC,IAMxCxG,EAAoByC,EAAUZ,SAAWX,EAAKW,OAAS,GAAKY,EACtDhC,EAAmC,IAAvB+F,EAAY3E,OACxBxB,EAA4C,IAA3BkG,EAAgB1E,QAAuC,IAAvB2E,EAAY3E,OACnEb,EAASe,EAAeU,EAAUd,MAAM,EA7GlB,IA6GyC0E,EAAgBG,EAAanG,EACxFuB,EAAkBa,EAAUZ,QAAS7B,EAAkB6B,OAAQpB,EAAW,KA1B9B,4CAAjB,yDGXjCyE,qBH0CkC,yDAAM,WAAOlE,EAAUwE,GAAjB,mBAAAvE,EAAA,sEACfC,EADe,OAChCC,EADgC,OAElC2B,EAAQ0C,IAAWF,SAASpF,MAC5ByG,EAAyC,IAA7B3G,EAAkB6B,OAAe7B,EAAoBmB,EAErE2B,EAAMtB,KAAI,SAAAoF,GACND,EAAYA,EAAU3C,QAAO,SAAApE,GAAI,OAAIA,EAAK+C,QAAUiE,EAASjE,YAGjE3B,EAASgB,EAAe2E,EAAUhF,MAAM,EA5HlB,IA4HyCC,EAAkB+E,EAAU9E,UATrD,2CAAN,0DG/CrBwD,CAMZjB,GCzEGyC,E,kLAEFlC,KAAKpB,MAAMuD,sB,+BAGH,IAAD,OACP,OACE,6BACkC,IAA/BnC,KAAKpB,MAAML,iBACV,8FACeyB,KAAKpB,MAAML,gBAD1B,8CAEE,4BAAQa,QAASY,KAAKpB,MAAMwD,yBAA5B,0FAKHpC,KAAKpB,MAAMP,UAAUxB,KAAI,SAAA5B,GACxB,OACE,yBAAKsE,IAAKtE,EAAK+C,OACZ/C,EAAK+C,MACN,0BACEjD,UAAWqF,IAAOC,SAClBjB,QAAS,kBAAM,EAAKR,MAAMyD,qBAAqBpH,KAFjD,cASL+E,KAAKpB,MAAMN,mBACV,4BAAQc,QAASY,KAAKpB,MAAM0D,yBAA5B,4E,GA9Bc9B,IAAMC,WA+CfC,eARS,SAAAvC,GACtB,MAAO,CACLE,UAAWF,EAAMoE,cAAclE,UAC/BC,kBAAmBH,EAAMoE,cAAcjE,kBACvCC,gBAAiBJ,EAAMoE,cAAchE,mBAID,CACtC4D,kBHhB+B,kBAAM,SAAC9F,GACpC,IALkBgC,EAAWC,EAAmBC,EAK1Cd,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAChC,OAAjBJ,GACApB,GAPcgC,EAOQZ,EAAaT,MAAM,EAtCvB,IA+BOsB,EAOuCrB,EAAkBQ,GAPtCc,EAOqDd,EAAaP,OAP7C,CACrElB,KArCkB,2BAsClBC,QAAS,CAAEoC,YAAWC,oBAAmBC,wBGmB3C8D,qBHgBkC,SAACzB,GAAD,OAAc,SAAAvE,GAC9C,IANqBgC,EAAWC,EAAmBC,EAO7CiE,EADe9E,KAAKC,MAAMC,aAAaC,QAAQ,WACvBwB,QAAO,SAAApE,GAAI,OAAIA,EAAK+C,QAAU4C,EAAS5C,SACrEJ,aAAawD,QAAQ,SAAU1D,KAAK2D,UAAUmB,IAC9CnG,GATqBgC,EASImE,EAASxF,MAAM,EAxElB,IA+DUsB,EAS+BrB,EAAkBuF,GAT9BjE,EASyCiE,EAAStF,OAT7B,CACxElB,KApEqB,8BAqErBC,QAAS,CAAEoC,YAAWC,oBAAmBC,wBGZ3C+D,wBHwBqC,kBAAM,SAACjG,EAAUwE,GACpD,IAHwBxC,EAAWC,EAG/Bb,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WACrCgD,IAAW0B,cAAclE,UAEjCxB,KAAI,SAAAoF,GACNxE,EAAeA,EAAa4B,QAAO,SAAApE,GAAI,OAAIA,EAAK+C,QAAUiE,EAASjE,YAGvE3B,GAVwBgC,EAUIZ,EAAaT,MAAM,EArFzB,IA2EasB,EAUmCrB,EAAkBQ,GAV9B,CAAEzB,KA9EnC,kCA8E+DqC,YAAWC,yBGrBrG8D,wBH2CqC,kBAAM,SAAA/F,GACzCuB,aAAa6E,WAAW,UACxBpG,EAP2E,CAC3EL,KA/FyB,kCAgGzBC,QAAS,CAAEoC,UAKiB,GALNC,mBAKU,EALSC,gBAKF,QGjD5BmC,CAKZwB,GCxCYQ,mBAff,WACE,OACE,yBAAK3H,UAAU,OACb,kBAAC,EAAD,MACA,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4H,OAAK,EAACC,KAAK,KAAI,kBAAC,IAAD,CAAUxH,GAAG,YACnC,kBAAC,IAAD,CAAOwH,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,aAAaC,OAAQ,kBAAM,kBAAC,EAAD,eCH7BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCbAC,EAAWC,YAAgB,CAC/BzC,SAAUzC,EACVqE,cAAe/D,IAMF6E,EAFHC,YAAYH,EAAUI,YAAgBC,MCFlDC,IAASZ,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUQ,MAAOA,GACf,kBAAC,EAAD,QAGJK,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,sxmDGxI5BC,EAAOC,QAAU,CAAC,KAAO,qBAAqB,OAAS,uBAAuB,SAAW,yBAAyB,eAAiB,+BAA+B,eAAiB,+BAA+B,aAAe,6BAA6B,SAAW,2B","file":"static/js/main.030ef1c2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from '../../styles/styles.module.scss'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav>\r\n      <div className={classes.item}>\r\n        <NavLink activeClassName={classes.active} to=\"/films\">Фильмы</NavLink>\r\n        <NavLink activeClassName={classes.active} to=\"/bookmarks\">Закладки</NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import data from '../../taksnetJSON/films.json'\r\nimport tags from \"../../taksnetJSON/tags.json\";\r\n\r\nconst GET_FILMS = '/films/GET_FILM'\r\nconst TEXT_BODY = '/films/TEXT_BODY'\r\nconst ACTIVE_TAG_NAME = '/film/ACTIVE_TAG_NAME'\r\nconst GET_NEXT_FILMS = '/films/GET_NEXT_FILMS'\r\nconst IS_BOOKMARKS = '/films/IS_BOOKMARKS'\r\n\r\nconst lengthOfMovieList = 15\r\nlet filmNamesToFilter = []\r\n\r\nconst initialState = {\r\n    films: [],\r\n    tagNames: [],\r\n    activeTagsName: [],\r\n    isMaxTagsError: false,\r\n    isNextFilmsButton: false,\r\n    inputTextValue: '',\r\n    hitList: 0,\r\n    isHitList: false\r\n}\r\n\r\nconst filmReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n        case TEXT_BODY:\r\n        case ACTIVE_TAG_NAME:\r\n        case IS_BOOKMARKS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case GET_NEXT_FILMS:\r\n            return {\r\n                ...state,\r\n                films: [\r\n                    ...state.films,\r\n                    ...action.films\r\n                ],\r\n                isNextFilmsButton: action.isNextFilmsButton\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getFilms = (films, tagNames, inputTextValue, isNextFilmsButton, hitList, isHitList) =>\r\n    ({ type: GET_FILMS, payload: { films: inFavorites(films), tagNames, inputTextValue, isNextFilmsButton, hitList, isHitList } })\r\n\r\nexport const getFilmsThunk = (textBody, hitList, isHitList) => async (dispatch) => {\r\n    const response = await data\r\n    const responseTags = await tags\r\n\r\n    let id = 0\r\n    const dataTagItem = responseTags.map((item) => {\r\n        id++\r\n        return ({ name: item, tagActive: false, id })\r\n    })\r\n\r\n    dispatch(getFilms(response.slice(0, lengthOfMovieList), dataTagItem, textBody, nextButtonBoolean(data.length), hitList, isHitList))\r\n}\r\n\r\nconst onInputBody = (films, inputTextValue, isNextFilmsButton, hitList, isHitList, tagNames) => ({\r\n    type: TEXT_BODY,\r\n    payload: { films: inFavorites(films), inputTextValue, isNextFilmsButton, hitList, isHitList, tagNames }\r\n})\r\n\r\nexport const filterFilmBody = (textBody) => async (dispatch, getState) => {\r\n    const response = await data\r\n    const stateTagNames = getState().filmPage.tagNames\r\n    const filterFilms = response.filter(item => {\r\n        return item.title.toLowerCase().includes(textBody)\r\n    })\r\n\r\n    const filterTagNames = stateTagNames.map(item => {\r\n        if (item.tagActive === true) {\r\n            return { ...item, tagActive: false };\r\n        }\r\n        return item\r\n    })\r\n\r\n    filmNamesToFilter = filterFilms.length === response.length ? [] : filterFilms\r\n\r\n    !textBody ? dispatch(getFilmsThunk(textBody, filmNamesToFilter.length, false))\r\n        : dispatch(onInputBody(filterFilms.slice(0, lengthOfMovieList), textBody, nextButtonBoolean(filterFilms.length), filmNamesToFilter.length, true, filterTagNames))\r\n}\r\n\r\nconst activeTagNames = (films, tagNames, activeTagsName, isMaxTagsError, isNextFilmsButton, hitList, isHitList, inputTextValue) => ({\r\n    type: ACTIVE_TAG_NAME,\r\n    payload: { films: inFavorites(films), tagNames, activeTagsName, isMaxTagsError, isNextFilmsButton, hitList, isHitList, inputTextValue }\r\n})\r\n\r\nexport const activeTagFilmsThunk = (bodyTagName) => async (dispatch, getState) => {\r\n    let arrFilter = await data\r\n    const stateTagNames = getState().filmPage.tagNames\r\n    const stateActiveTags = getState().filmPage.activeTagsName\r\n    let activeNames = []\r\n\r\n    const filterTagNames = stateTagNames.map(item => {\r\n        if (item.name === bodyTagName) {\r\n            let activeItem = !item.tagActive && stateActiveTags.length < 3 ? true : false\r\n            if (activeItem) { activeNames.push(item.name) }\r\n            return { ...item, tagActive: activeItem };\r\n        }\r\n        if (item.tagActive) { activeNames.push(item.name) }\r\n        return item\r\n    })\r\n\r\n    for (let tagActiveName of activeNames) {\r\n        arrFilter = arrFilter.filter(item => {\r\n            return item.tags.includes(tagActiveName)\r\n        })\r\n    }\r\n\r\n    filmNamesToFilter = arrFilter.length === data.length ? [] : arrFilter\r\n    const isHitList = activeNames.length !== 0 ? true : false\r\n    const isMaxTagsError = stateActiveTags.length === 3 && activeNames.length === 3 ? true : false\r\n    dispatch(activeTagNames(arrFilter.slice(0, lengthOfMovieList), filterTagNames, activeNames, isMaxTagsError,\r\n        nextButtonBoolean(arrFilter.length), filmNamesToFilter.length, isHitList, ''))\r\n}\r\n\r\nconst nextFilmButton = (films, isNextFilmsButton) => ({ type: GET_NEXT_FILMS, films: inFavorites(films), isNextFilmsButton })\r\n\r\nexport const nextFilmsButtonThunk = () => async (dispatch, getState) => {\r\n    const response = await data\r\n    let state = getState().filmPage.films\r\n    let filmNames = filmNamesToFilter.length !== 0 ? filmNamesToFilter : response\r\n\r\n    state.map(itemFilm => {\r\n        filmNames = filmNames.filter(item => item.title !== itemFilm.title)\r\n    })\r\n\r\n    dispatch(nextFilmButton(filmNames.slice(0, lengthOfMovieList), nextButtonBoolean(filmNames.length)))\r\n}\r\n\r\nconst nextButtonBoolean = (arrLength) => {\r\n    return arrLength <= lengthOfMovieList ? false : true\r\n}\r\n\r\nexport const isBookmarksState = films => ({ type: IS_BOOKMARKS, payload: { films } })\r\n\r\nconst inFavorites = (itemName) => {\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n\r\n    if (getLocalItem !== null) {\r\n        let arrFilter = itemName\r\n        getLocalItem.map(localItem => {\r\n            arrFilter = arrFilter.map(item => {\r\n                if (item.title === localItem.title) {\r\n                    return { ...item, isBookmarks: true }\r\n                }\r\n                return item\r\n            })\r\n        })\r\n        return arrFilter\r\n    }\r\n    else return itemName\r\n}\r\n\r\nexport default filmReducer;","import { isBookmarksState } from \"./filmReducer\"\r\n\r\nconst GET_BOOKMARKS = '/bookmarks/GET_BOOKMARKS'\r\nconst DELETE_BOOKMARKS = '/bookmarks/DELETE_BOOKMARKS'\r\nconst NEXT_FAVORITES_FILMS = '/bookmarks/NEXT_FAVORITES_FILMS'\r\nconst DELETE_ALL_FAVORITES = '/bookmarks/DELETE_ALL_FAVORITES'\r\n\r\nconst lengthOfMovieList = 15\r\n\r\nconst initialState = {\r\n    bookmarks: [],\r\n    isFavoritesButton: false,\r\n    favoritesLength: 0\r\n}\r\n\r\nconst bookmarksReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_BOOKMARKS:\r\n        case DELETE_BOOKMARKS:\r\n        case DELETE_ALL_FAVORITES:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case NEXT_FAVORITES_FILMS:\r\n            return {\r\n                ...state,\r\n                bookmarks: [\r\n                    ...state.bookmarks,\r\n                    ...action.bookmarks\r\n                ],\r\n                isFavoritesButton: action.isFavoritesButton\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getBookmarks = (bookmarks, isFavoritesButton, favoritesLength) => ({\r\n    type: GET_BOOKMARKS,\r\n    payload: { bookmarks, isFavoritesButton, favoritesLength }\r\n})\r\nexport const getBookmarksThunk = () => (dispatch) => {\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n    if (getLocalItem !== null) {\r\n        dispatch(getBookmarks(getLocalItem.slice(0, lengthOfMovieList), nextButtonBoolean(getLocalItem), getLocalItem.length))\r\n    }\r\n}\r\n\r\nexport const setBookmarksThunk = filmName => async (dispatch, getState) => {\r\n    const stateFilms = getState().filmPage.films\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n    let arr = []\r\n\r\n    if (getLocalItem !== null) arr.push(...getLocalItem)\r\n    const newFilmState = stateFilms.map(item => {\r\n        if (item.title === filmName.title) {\r\n            const isBookmarks = item.isBookmarks ? false : true\r\n            const itemValue = { ...item, isBookmarks }\r\n            isBookmarks === true ? arr.push(itemValue) :\r\n                arr = arr.filter(p => p.title !== item.title)\r\n            return itemValue\r\n        }\r\n        return item\r\n    })\r\n\r\n    dispatch(isBookmarksState(newFilmState))\r\n    localStorage.setItem('Movies', JSON.stringify(arr))\r\n}\r\n\r\nconst deleteBookmarks = (bookmarks, isFavoritesButton, favoritesLength) => ({\r\n    type: DELETE_BOOKMARKS,\r\n    payload: { bookmarks, isFavoritesButton, favoritesLength }\r\n})\r\n\r\nexport const deleteBookmarksThunk = (filmName) => dispatch => {\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n    const newState = getLocalItem.filter(item => item.title !== filmName.title)\r\n    localStorage.setItem('Movies', JSON.stringify(newState))\r\n    dispatch(deleteBookmarks(newState.slice(0, lengthOfMovieList), nextButtonBoolean(newState), newState.length))\r\n}\r\n\r\nconst nextFavoritesFilms = (bookmarks, isFavoritesButton) => ({ type: NEXT_FAVORITES_FILMS, bookmarks, isFavoritesButton })\r\n\r\nexport const nextFavoritesFilmsThunk = () => (dispatch, getState) => {\r\n    let getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n    const state = getState().bookmarksPage.bookmarks\r\n\r\n    state.map(itemFilm => {\r\n        getLocalItem = getLocalItem.filter(item => item.title !== itemFilm.title)\r\n    })\r\n\r\n    dispatch(nextFavoritesFilms(getLocalItem.slice(0, lengthOfMovieList), nextButtonBoolean(getLocalItem)))\r\n}\r\n\r\nconst nextButtonBoolean = (arrLength) => {\r\n    return arrLength.length <= lengthOfMovieList ? false : true\r\n}\r\n\r\nconst deleteAllFavorites = (bookmarks, isFavoritesButton, favoritesLength) => ({\r\n    type: DELETE_ALL_FAVORITES,\r\n    payload: { bookmarks, isFavoritesButton, favoritesLength }\r\n})\r\n\r\nexport const deleteAllFavoritesThunk = () => dispatch => {\r\n    localStorage.removeItem('Movies');\r\n    dispatch(deleteAllFavorites([], false, 0))\r\n}\r\n\r\nexport default bookmarksReducer;","import React, { useState } from \"react\";\r\nimport classes from \"../../styles/styles.module.scss\";\r\n\r\nconst PaginationTag = ({ tagNames, tagFilmsThunk, portionSize = 6, ...props }) => {\r\n  let [portionNumber, setPortionNumber] = useState(1)\r\n  let leftPortionTagNumber = (portionNumber - 1) * portionSize + 1\r\n  let rightPortionTagNumber = portionNumber * portionSize\r\n\r\n  return (\r\n    <div>\r\n      {leftPortionTagNumber > 1 && <span className={`${classes.tagStyle} ${classes.tagStyleButton}`} \r\n      onClick={()=>setPortionNumber(portionNumber - 1)} >НАЗАД</span>}\r\n\r\n      {tagNames\r\n      .filter(item => item.id >= leftPortionTagNumber && item.id <= rightPortionTagNumber)\r\n      .map(item => {\r\n        return (\r\n          <span\r\n            className={\r\n              item.tagActive\r\n                ? `${classes.tagStyle} ${classes.tagStyleActive}`\r\n                : classes.tagStyle\r\n            }\r\n            key={item.id}\r\n            onClick={() => tagFilmsThunk(item.name)}\r\n          >\r\n            {item.name}\r\n          </span>\r\n          \r\n        );\r\n      })}\r\n\r\n      {rightPortionTagNumber < tagNames.length && <span className={`${classes.tagStyle} ${classes.tagStyleButton}`} \r\n      onClick={()=>setPortionNumber(portionNumber + 1)} >ДАЛЕЕ</span>}\r\n\r\n      {props.isMaxTagsError && <div className={classes.maxTagsError} >Выбрано максимум 3 тега!</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationTag;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getFilmsThunk,\r\n  filterFilmBody,\r\n  activeTagFilmsThunk,\r\n  nextFilmsButtonThunk\r\n} from \"../../redux/reducers/filmReducer\";\r\n\r\nimport styles from \"../../styles/styles.module.scss\";\r\nimport { Input } from \"antd\";\r\nimport { setBookmarksThunk } from \"../../redux/reducers/bookmarksReducer\";\r\nimport PaginationTag from \"../PaginationTag/PaginationTag.jsx\";\r\n\r\nclass FilmContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getFilmsThunk();\r\n  }\r\n\r\n  onInputText = ev => {\r\n    const body = ev.target.value;\r\n    this.props.filterFilmBody(body);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Input\r\n          placeholder=\"Введите название фильма\"\r\n          value={this.props.inputTextValue}\r\n          onChange={this.onInputText}\r\n        />\r\n        <PaginationTag\r\n          tagNames={this.props.tagNames}\r\n          tagFilmsThunk={this.props.activeTagFilmsThunk}\r\n          {...this.props}\r\n        />\r\n        {this.props.isHitList && <div>Найдено совпадений: {this.props.hitList}</div> }\r\n        {this.props.films.map(item => {\r\n          return (\r\n            <div key={item.title}>\r\n              {item.title}\r\n              <span className={styles.selected}\r\n                onClick={() => {\r\n                  this.props.setBookmarksThunk(item);\r\n                }}\r\n              >\r\n  \r\n               {item.isBookmarks === true ? '★' : '☆' }\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div>\r\n          {this.props.isNextFilmsButton && (\r\n            <button onClick={this.props.nextFilmsButtonThunk}>Показать еще</button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    films: state.filmPage.films,\r\n    isNextFilmsButton: state.filmPage.isNextFilmsButton,\r\n    inputTextValue: state.filmPage.inputTextValue,\r\n    tagNames: state.filmPage.tagNames,\r\n    activeTagsName: state.filmPage.activeTagsName,\r\n    hitList: state.filmPage.hitList,\r\n    isHitList: state.filmPage.isHitList,\r\n    isMaxTagsError: state.filmPage.isMaxTagsError,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getFilmsThunk,\r\n  setBookmarksThunk,\r\n  filterFilmBody,\r\n  activeTagFilmsThunk,\r\n  nextFilmsButtonThunk\r\n})(FilmContainer);\r\n","import React from \"react\";\r\nimport styles from \"../../styles/styles.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getBookmarksThunk,\r\n  deleteBookmarksThunk,\r\n  nextFavoritesFilmsThunk,\r\n  deleteAllFavoritesThunk\r\n} from \"../../redux/reducers/bookmarksReducer\";\r\n\r\nclass Bookmarks extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getBookmarksThunk();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.favoritesLength !== 0 && (\r\n          <div>\r\n            В избранном {this.props.favoritesLength} фильмов\r\n            <button onClick={this.props.deleteAllFavoritesThunk}>\r\n              Очистить список\r\n            </button>\r\n          </div>\r\n        )}\r\n        {this.props.bookmarks.map(item => {\r\n          return (\r\n            <div key={item.title}>\r\n              {item.title}\r\n              <span\r\n                className={styles.selected}\r\n                onClick={() => this.props.deleteBookmarksThunk(item)}\r\n              >\r\n                ★\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n        {this.props.isFavoritesButton && (\r\n          <button onClick={this.props.nextFavoritesFilmsThunk}>\r\n            Показать еще\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    bookmarks: state.bookmarksPage.bookmarks,\r\n    isFavoritesButton: state.bookmarksPage.isFavoritesButton,\r\n    favoritesLength: state.bookmarksPage.favoritesLength\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getBookmarksThunk,\r\n  deleteBookmarksThunk,\r\n  nextFavoritesFilmsThunk,\r\n  deleteAllFavoritesThunk\r\n})(Bookmarks);\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport { Route, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport FilmContainer from './components/Film/FilmContainer.jsx'\nimport Bookmarks from './components/Bookmarks/Bookmarks.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div>\n        <Switch>\n          <Route exact path=\"/\"><Redirect to=\"/films\" /></Route>\n          <Route path='/films' render={() => <FilmContainer />} />\n          <Route path='/bookmarks' render={() => <Bookmarks />} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport filmReducer from \"./reducers/filmReducer\";\r\nimport bookmarksReducer from \"./reducers/bookmarksReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  filmPage: filmReducer,\r\n  bookmarksPage: bookmarksReducer,\r\n});\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/reduxStore\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"styles_item__BHFkE\",\"active\":\"styles_active__3gQU6\",\"tagStyle\":\"styles_tagStyle__2RCl8\",\"tagStyleActive\":\"styles_tagStyleActive__2A714\",\"tagStyleButton\":\"styles_tagStyleButton__1i3db\",\"maxTagsError\":\"styles_maxTagsError__2zouh\",\"selected\":\"styles_selected__1YvCo\"};"],"sourceRoot":""}