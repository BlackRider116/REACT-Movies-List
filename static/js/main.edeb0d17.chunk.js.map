{"version":3,"sources":["components/Header/Header.jsx","redux/reducers/filmReducer.js","redux/reducers/bookmarksReducer.js","components/PaginationTag/PaginationTag.jsx","components/Film/FilmContainer.jsx","components/Bookmarks/Bookmarks.jsx","App.js","serviceWorker.js","redux/reduxStore.js","index.js","styles/styles.module.scss"],"names":["Header","className","classes","item","activeClassName","active","to","GET_TAG","initialState","films","tagName","activeTagName","nextButton","inputTextValue","getFilms","type","onInputBody","textBody","arr2","filterFilmToTag","dispatch","getState","arr","filmPage","length","filterTagFilms","data","console","log","dataItems","filter","tags","includes","nextMovies","dataItem","state","newState","slice","filterTagActive","maxActiveTag","filterActiveTagName","map","name","tagActive","filmReducer","action","bookmarks","setBookmarks","filmName","deleteFilm","movies","title","localStorage","removeItem","bookmarksReducer","PaginationTag","tagFilmsThunk","portionSize","useState","portionNumber","setPortionNumber","leftPortionTagNumber","rightPortionTagNumber","tagStyle","tagStyleButton","onClick","p","id","tagStyleActive","key","FilmContainer","onInputText","ev","body","target","value","props","filterFilmBody","onNextFilm","inputValue","getFilmsThunk","this","getTagThunk","placeholder","onChange","setBookmarksThunk","React","Component","connect","a","response","localItem","bookmarksPage","setItem","JSON","stringify","toLowerCase","filterFilms","input","activeTagNames","Bookmarks","getBookmarksThunk","deleteBookmarksThunk","itemName","parse","getItem","deleteBookmarks","withRouter","exact","path","render","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.edeb0d17.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from '../../styles/styles.module.scss'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav>\r\n      <div className={classes.item}>\r\n        <NavLink activeClassName={classes.active} to=\"/films\">Фильмы</NavLink>\r\n        <NavLink activeClassName={classes.active} to=\"/bookmarks\">Закладки</NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import data from '../../taksnetJSON/films.json'\r\nimport tags from \"../../taksnetJSON/tags.json\";\r\n\r\nconst GET_FILMS = '/films/GET_FILM'\r\nconst TEXT_BODY = '/films/TEXT_BODY'\r\nconst GET_TAG = '/films/GET_TAG'\r\nconst ACTIVE_TAG_NAME = '/film/ACTIVE_TAG_NAME'\r\nconst TAG_BODY = '/films/TAG_BODY'\r\n\r\nconst initialState = {\r\n    films: [],\r\n    tagName: [],\r\n    activeTagName: [],\r\n    nextButton: false,\r\n    inputTextValue: ''\r\n}\r\n\r\nconst filmReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n            return {\r\n                ...state,\r\n                films: [\r\n                    ...state.films,\r\n                    ...action.films\r\n                ],\r\n                nextButton: action.nextButton\r\n            }\r\n        case TEXT_BODY:\r\n            return {\r\n                ...state,\r\n                films: [...action.films],\r\n                inputTextValue: action.textBody,\r\n                nextButton: action.nextButton,\r\n            }\r\n        case TAG_BODY:\r\n            return {\r\n                ...state,\r\n                films: [...action.films],\r\n                nextButton: action.nextButton,\r\n            }\r\n        case GET_TAG:\r\n            return {\r\n                ...state,\r\n                tagName: [...action.tagName],\r\n            }\r\n        case ACTIVE_TAG_NAME:\r\n            return {\r\n                ...state,\r\n                tagName: filterTagActive(state.tagName, action.activeTagName),\r\n                activeTagName: filterActiveTagName(state.tagName)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getFilms = (films, nextButton) => ({ type: GET_FILMS, films, nextButton })\r\n\r\nexport const getFilmsThunk = () => async (dispatch, getState) => {\r\n    const state = getState().filmPage.films;\r\n    const response = await data\r\n    if (!state.length) {\r\n        dispatch(getFilms(response.slice(0, 15), true))\r\n    } else {\r\n        dispatch(nextMovies(response))\r\n    }\r\n}\r\n\r\nconst onInputBody = (films, textBody, nextButton) => ({ type: TEXT_BODY, films, textBody, nextButton })\r\n\r\nexport const filterFilmBody = (textBody) => async (dispatch, getState) => {\r\n    const filterFilms = await data.filter(item => {\r\n        return item.title.toLowerCase().includes(textBody)\r\n    })\r\n    const input = getState().filmPage.inputTextValue;\r\n    if (!textBody.length) {\r\n        dispatch(onInputBody([], textBody, false))\r\n    }\r\n    if (input !== textBody) {\r\n        if (filterFilms.length < 15) {\r\n            dispatch(onInputBody(filterFilms, textBody, false))\r\n        } else {\r\n            dispatch(onInputBody(filterFilms.slice(0, 15), textBody, true))\r\n        }\r\n    } else {\r\n        dispatch(nextMovies(filterFilms))\r\n    }\r\n}\r\n\r\nconst tagFilms = (films, nextButton) => ({ type: TAG_BODY, films, nextButton })\r\n\r\nlet arr2 = []\r\n\r\nexport const filterFilmToTag = (tagName) => (dispatch, getState) => {\r\n    let arr = getState().filmPage.activeTagName\r\n\r\n   \r\n    \r\n\r\n    if(arr.length === 0) {\r\n       arr2 = filterTagFilms(data, tagName)\r\n       console.log(arr2)\r\n    } \r\n    else if (arr.length === 1) {\r\n        \r\n        arr2 = filterTagFilms(arr2, tagName)\r\n        console.log(arr2)\r\n    } else if (arr.length === 2) {\r\n        arr2 = filterTagFilms(arr2, tagName)\r\n        console.log(arr2)\r\n    }\r\n\r\n\r\n    // console.log(arr2)\r\n    // console.log(arr3)\r\n    // console.log(arr4)\r\n    \r\n    \r\n\r\n  \r\n\r\n    // console.log(arr2)\r\n    // if (activeTagName) {\r\n    //     if (filterTagFilms.length < 15) {\r\n    //         dispatch(tagFilms(filterTagFilms, false))\r\n    //     } else {\r\n    //         dispatch(tagFilms(filterTagFilms.slice(0, 15), true))\r\n    //     }\r\n    // } else {\r\n    //     dispatch(nextMovies(filterTagFilms))\r\n    // }\r\n\r\n}\r\n\r\nconst filterTagFilms = (dataItems, tagName) => {\r\n    return dataItems.filter(item => {\r\n        return item.tags.includes(tagName)\r\n    })\r\n}\r\n\r\n// const filterTagFilms = (dataItems, tagName) => {\r\n//     return dataItems.filter(item => {\r\n//         return item.tags.includes(tagName)\r\n//     })\r\n// }\r\n\r\nconst nextMovies = (dataItem) => (dispatch, getState) => {\r\n    const state = getState().filmPage.films;\r\n    const newState = dataItem.filter(item => !state.includes(item))\r\n    if (newState.length < 15) {\r\n        dispatch(getFilms(newState, false))\r\n    } else {\r\n        dispatch(getFilms(newState.slice(0, 15), true))\r\n    }\r\n}\r\n\r\n//---------------------------------------------------------------------------------------------\r\n\r\nconst activeTagNames = (activeTagName, tagActive) => ({ type: ACTIVE_TAG_NAME, activeTagName, tagActive })\r\nexport const tagFilmsThunk = (activeTagName) => (dispatch) => {\r\n    dispatch(activeTagNames(activeTagName))\r\n    dispatch(filterFilmToTag(activeTagName))\r\n}\r\n\r\nconst getTag = (tagName) => ({ type: GET_TAG, tagName })\r\nexport const getTagThunk = () => dispatch => {\r\n    let id = 0\r\n    const data = tags.map((item) => {\r\n        id++\r\n        return ({ name: item, tagActive: false, id })\r\n    })\r\n    dispatch(getTag(data))\r\n}\r\n\r\nconst filterTagActive = (state, activeTagName) => {\r\n    const maxActiveTag = filterActiveTagName(state)\r\n    return state.map(item => {\r\n        if (item.name === activeTagName) {\r\n            let active = !item.tagActive && maxActiveTag.length < 3 ? true : false\r\n            return { ...item, tagActive: active };\r\n        }\r\n        return item;\r\n    })\r\n}\r\n\r\nconst filterActiveTagName = (state) => {\r\n    return state.filter(item => item.tagActive === true)\r\n}\r\n\r\nexport default filmReducer;","const GET_BOOKMARKS = '/films/GET_BOOKMARKS'\r\nconst SET_BOOKMARKS = '/films/SET_BOOKMARKS'\r\nconst DELETE_BOOKMARKS = '/films/DELETE_BOOKMARKS'\r\n\r\nconst initialState = {\r\n    bookmarks: []\r\n}\r\n\r\nconst bookmarksReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_BOOKMARKS:\r\n            return {\r\n                ...state,\r\n                bookmarks: action.filmName\r\n            }\r\n        case SET_BOOKMARKS:\r\n            return {\r\n                ...state,\r\n                bookmarks: [\r\n                    ...state.bookmarks,\r\n                     action.filmName\r\n                ]\r\n            }\r\n        case DELETE_BOOKMARKS:\r\n            return {\r\n                ...state,\r\n                bookmarks: deleteFilm(state.bookmarks, action.filmName)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n// const filterBookmarks = (movies, filmName) => {\r\n//     // console.log(movies)\r\n//     // console.log(filmName)\r\n//     return movies.filter(item => {\r\n//         console.log(movies)\r\n//         if(movies === []) {\r\n//             console.log(filmName)\r\n//             return  filmName}\r\n//         if (item.title !== filmName.title) {\r\n            \r\n//             return filmName\r\n//         }\r\n//         // return movies\r\n//     })\r\n// }\r\n\r\n// const deleteFilm = (movies, filmName) => {\r\n//     return movies.filter(item => {\r\n//         return (item.title !== filmName,\r\n//             localStorage.removeItem('localFilmName')\r\n//         )\r\n//     })\r\n// }\r\n\r\n// export const setBookmarksThunk = filmName => async (dispatch, getState) => {\r\n//     const localItem = getState().bookmarksPage.bookmarks\r\n//     let newItem = localItem.filter(item => {\r\n//         if (item !== filmName) {\r\n//             dispatch(setBookmarks(filmName))\r\n//         }\r\n//     })\r\n//     console.log(newItem)\r\n\r\n\r\n\r\n//     // dispatch(setBookmarks(filmName))\r\n// }\r\n\r\nconst setBookmarks = (filmName) => ({ type: SET_BOOKMARKS, filmName })\r\nexport const setBookmarksThunk = filmName => async (dispatch, getState) => {\r\n    const localItem = getState().bookmarksPage.bookmarks\r\n    dispatch(setBookmarks(filmName))\r\n    localStorage.setItem('localFilmName', JSON.stringify(localItem))\r\n}\r\n\r\nconst getBookmarks = (filmName) => ({ type: GET_BOOKMARKS, filmName })\r\nexport const getBookmarksThunk = () => (dispatch) => {\r\n    const itemName = JSON.parse(localStorage.getItem('localFilmName'))\r\n    if (itemName) {\r\n        dispatch(getBookmarks(itemName))\r\n    }\r\n}\r\n\r\nconst deleteBookmarks = (filmName) => ({ type: DELETE_BOOKMARKS, filmName })\r\nconst deleteFilm = (movies, filmName) => {\r\n    return movies.filter(item => {\r\n        return (item.title !== filmName.title,\r\n            localStorage.removeItem('localFilmName')\r\n        )\r\n    })\r\n}\r\nexport const deleteBookmarksThunk = (filmName) => dispatch => {\r\n    dispatch(deleteBookmarks(filmName))\r\n\r\n}\r\n\r\nexport default bookmarksReducer;","import React, { useState } from \"react\";\r\nimport classes from \"../../styles/styles.module.scss\";\r\n\r\nconst PaginationTag = ({ tagName, tagFilmsThunk, portionSize = 6 }) => {\r\n  let [portionNumber, setPortionNumber] = useState(1)\r\n  let leftPortionTagNumber = (portionNumber - 1) * portionSize + 1\r\n  let rightPortionTagNumber = portionNumber * portionSize\r\n\r\n  return (\r\n    <div>\r\n      {leftPortionTagNumber > 1 && <span className={`${classes.tagStyle} ${classes.tagStyleButton}`} onClick={()=>setPortionNumber(portionNumber - 1)} >НАЗАД</span>}\r\n      {tagName\r\n      .filter(p => p.id >= leftPortionTagNumber && p.id <= rightPortionTagNumber)\r\n      .map(item => {\r\n        return (\r\n          <span\r\n            className={\r\n              item.tagActive\r\n                ? `${classes.tagStyle} ${classes.tagStyleActive}`\r\n                : classes.tagStyle\r\n            }\r\n            key={item.name}\r\n            onClick={() => tagFilmsThunk(item.name)}\r\n          >\r\n            {item.name}\r\n          </span>\r\n        );\r\n      })}\r\n      {rightPortionTagNumber < 24 && <span className={`${classes.tagStyle} ${classes.tagStyleButton}`} onClick={()=>setPortionNumber(portionNumber + 1)} >ДАЛЕЕ</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationTag;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getFilmsThunk,\r\n  filterFilmBody,\r\n  tagFilmsThunk,\r\n  getTagThunk,\r\n  filterFilmToTag\r\n} from \"../../redux/reducers/filmReducer\";\r\n\r\nimport classes from \"../../styles/styles.module.scss\";\r\nimport { Input } from \"antd\";\r\nimport { setBookmarksThunk } from \"../../redux/reducers/bookmarksReducer\";\r\nimport PaginationTag from \"../PaginationTag/PaginationTag.jsx\";\r\n\r\nclass FilmContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getFilmsThunk();\r\n    this.props.getTagThunk();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // console.log(!this.props.inputTextValue)\r\n  }\r\n\r\n  onInputText = ev => {\r\n    const body = ev.target.value;\r\n    this.props.filterFilmBody(body);\r\n  };\r\n\r\n  onNextFilm = () => {\r\n    let inputValue = this.props.inputTextValue;\r\n    if (!inputValue) {\r\n      this.props.getFilmsThunk();\r\n    } else if (this.props.activeTagName.length > 0) {\r\n      this.props.filterFilmToTag(null);\r\n    } else {\r\n      this.props.filterFilmBody(inputValue);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Input\r\n          placeholder=\"Введите название фильма\"\r\n          value={this.props.inputTextValue}\r\n          onChange={this.onInputText}\r\n        />\r\n        <PaginationTag\r\n          tagName={this.props.tagName}\r\n          tagFilmsThunk={this.props.tagFilmsThunk}\r\n        />\r\n\r\n        {this.props.films.map(item => {\r\n          return (\r\n            <div key={item.title}>\r\n              {item.title}\r\n              <button\r\n                onClick={() => {\r\n                  this.props.setBookmarksThunk(item);\r\n                }}\r\n              >\r\n                ☆\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div>\r\n          {this.props.nextButton && (\r\n            <button onClick={this.onNextFilm}>Показать еще</button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    films: state.filmPage.films,\r\n    nextButton: state.filmPage.nextButton,\r\n    inputTextValue: state.filmPage.inputTextValue,\r\n    tagName: state.filmPage.tagName,\r\n\r\n    activeTagName: state.filmPage.activeTagName\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getFilmsThunk,\r\n  setBookmarksThunk,\r\n  filterFilmBody,\r\n  tagFilmsThunk,\r\n  getTagThunk,\r\n  filterFilmToTag\r\n})(FilmContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getBookmarksThunk, deleteBookmarksThunk } from \"../../redux/reducers/bookmarksReducer\";\r\n\r\nclass Bookmarks extends React.Component {\r\n  componentDidMount(){\r\n    this.props.getBookmarksThunk()\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    // console.log(this.props.bookmarks)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.bookmarks.length > 0 && this.props.bookmarks.map(item => {\r\n          return (\r\n            <div key={item.title}>\r\n              {item.title}\r\n              <button onClick={() => this.props.deleteBookmarksThunk(item)}>\r\n                ☆\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n        <button>Показать еще</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    bookmarks: state.bookmarksPage.bookmarks\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,{getBookmarksThunk, deleteBookmarksThunk})(Bookmarks);\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport { Route, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport FilmContainer from './components/Film/FilmContainer.jsx'\nimport Bookmarks from './components/Bookmarks/Bookmarks.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div>\n        <Switch>\n          <Route exact path=\"/\"><Redirect to=\"/films\" /></Route>\n          <Route path='/films' render={() => <FilmContainer />} />\n          <Route path='/bookmarks' render={() => <Bookmarks />} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport filmReducer from \"./reducers/filmReducer\";\r\nimport bookmarksReducer from \"./reducers/bookmarksReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  filmPage: filmReducer,\r\n  bookmarksPage: bookmarksReducer,\r\n});\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/reduxStore\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"styles_item__BHFkE\",\"active\":\"styles_active__3gQU6\",\"tagStyle\":\"styles_tagStyle__2RCl8\",\"tagStyleActive\":\"styles_tagStyleActive__2A714\",\"tagStyleButton\":\"styles_tagStyleButton__1i3db\"};"],"sourceRoot":""}