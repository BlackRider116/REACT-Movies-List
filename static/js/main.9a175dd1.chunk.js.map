{"version":3,"sources":["components/Header/Header.jsx","redux/reducers/filmReducer.js","redux/reducers/bookmarksReducer.js","components/PaginationTag/PaginationTag.jsx","components/Film/FilmContainer.jsx","components/Bookmarks/Bookmarks.jsx","App.js","serviceWorker.js","redux/reduxStore.js","index.js","styles/styles.module.scss"],"names":["Header","className","classes","item","activeClassName","active","to","filmNamesToFilterTags","filmNamesToFilterInput","initialState","films","tagNames","activeTagsName","isMaxTagsError","isNextFilmsButton","inputTextValue","hitList","isHitList","getFilms","type","payload","getFilmsThunk","textBody","dispatch","a","data","response","tags","responseTags","id","dataItem","map","name","tagActive","slice","nextButtonBoolean","length","onInputBody","activeTagNames","nextFilmButton","arrLength","filmReducer","state","action","bookmarks","setBookmarks","filmName","deleteFilm","movies","filter","title","localStorage","removeItem","bookmarksReducer","PaginationTag","tagFilmsThunk","portionSize","props","useState","portionNumber","setPortionNumber","leftPortionTagNumber","rightPortionTagNumber","tagStyle","tagStyleButton","onClick","tagStyleActive","key","maxTagsError","FilmContainer","onInputText","ev","body","target","value","filterFilmBody","this","placeholder","onChange","activeTagFilmsThunk","setBookmarksThunk","nextFilmsButtonThunk","React","Component","connect","filmPage","getState","localItem","bookmarksPage","setItem","JSON","stringify","stateTagNames","filterFilms","toLowerCase","includes","filterTagNames","bodyTagName","arrFilter","stateActiveTags","activeNames","activeItem","push","tagActiveName","filmNames","newState","Bookmarks","getBookmarksThunk","deleteBookmarksThunk","itemName","parse","getItem","deleteBookmarks","withRouter","exact","path","render","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.9a175dd1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from '../../styles/styles.module.scss'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav>\r\n      <div className={classes.item}>\r\n        <NavLink activeClassName={classes.active} to=\"/films\">Фильмы</NavLink>\r\n        <NavLink activeClassName={classes.active} to=\"/bookmarks\">Закладки</NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import data from '../../taksnetJSON/films.json'\r\nimport tags from \"../../taksnetJSON/tags.json\";\r\n\r\nconst GET_FILMS = '/films/GET_FILM'\r\nconst TEXT_BODY = '/films/TEXT_BODY'\r\nconst ACTIVE_TAG_NAME = '/film/ACTIVE_TAG_NAME'\r\nconst GET_NEXT_FILMS = '/films/GET_NEXT_FILMS'\r\n\r\nconst lengthOfMovieList = 15\r\nlet filmNamesToFilterTags = []\r\nlet filmNamesToFilterInput = []\r\n\r\nconst initialState = {\r\n    films: [],\r\n    tagNames: [],\r\n    activeTagsName: [],\r\n    isMaxTagsError: false,\r\n    isNextFilmsButton: false,\r\n    inputTextValue: '',\r\n    hitList: 0,\r\n    isHitList: false\r\n}\r\n\r\nconst filmReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n        case TEXT_BODY:\r\n        case ACTIVE_TAG_NAME:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case GET_NEXT_FILMS:\r\n            return {\r\n                ...state,\r\n                films: [\r\n                    ...state.films,\r\n                    ...action.films\r\n                ],\r\n                isNextFilmsButton: action.isNextFilmsButton\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getFilms = (films, tagNames, inputTextValue, isNextFilmsButton, hitList, isHitList) =>\r\n    ({ type: GET_FILMS, payload: { films, tagNames, inputTextValue, isNextFilmsButton, hitList, isHitList } })\r\n\r\nexport const getFilmsThunk = (textBody, hitList, isHitList) => async (dispatch) => {\r\n    const response = await data\r\n    const responseTags = await tags\r\n    let id = 0\r\n    const dataItem = responseTags.map((item) => {\r\n        id++\r\n        return ({ name: item, tagActive: false, id })\r\n    })\r\n\r\n    dispatch(getFilms(response.slice(0, lengthOfMovieList), dataItem, textBody, nextButtonBoolean(data.length), hitList, isHitList))\r\n}\r\n\r\nconst onInputBody = (films, inputTextValue, isNextFilmsButton, hitList, isHitList, tagNames) => ({\r\n    type: TEXT_BODY,\r\n    payload: { films, inputTextValue, isNextFilmsButton, hitList, isHitList, tagNames }\r\n})\r\n\r\nexport const filterFilmBody = (textBody) => async (dispatch, getState) => {\r\n    const response = await data\r\n    const stateTagNames = getState().filmPage.tagNames\r\n    const filterFilms = response.filter(item => {\r\n        return item.title.toLowerCase().includes(textBody)\r\n    })\r\n\r\n    const filterTagNames = stateTagNames.map(item => {\r\n        if (item.tagActive === true) {\r\n            return { ...item, tagActive: false };\r\n        }\r\n        return item\r\n    })\r\n\r\n    filmNamesToFilterInput = filterFilms.length === response.length ? [] : filterFilms\r\n\r\n    !textBody ? dispatch(getFilmsThunk(textBody, filmNamesToFilterInput.length, false))\r\n        : dispatch(onInputBody(filterFilms.slice(0, lengthOfMovieList), textBody, nextButtonBoolean(filterFilms.length), filmNamesToFilterInput.length, true, filterTagNames))\r\n}\r\n\r\nconst activeTagNames = (films, tagNames, activeTagsName, isMaxTagsError, isNextFilmsButton, hitList, isHitList, inputTextValue) => ({\r\n    type: ACTIVE_TAG_NAME,\r\n    payload: { films, tagNames, activeTagsName, isMaxTagsError, isNextFilmsButton, hitList, isHitList, inputTextValue }\r\n})\r\n\r\nexport const activeTagFilmsThunk = (bodyTagName) => async (dispatch, getState) => {\r\n    let arrFilter = await data\r\n    const stateTagNames = getState().filmPage.tagNames\r\n    const stateActiveTags = getState().filmPage.activeTagsName\r\n    let activeNames = []\r\n\r\n    const filterTagNames = stateTagNames.map(item => {\r\n        if (item.name === bodyTagName) {\r\n            let activeItem = !item.tagActive && stateActiveTags.length < 3 ? true : false\r\n            if (activeItem) { activeNames.push(item.name) }\r\n            return { ...item, tagActive: activeItem };\r\n        }\r\n        if (item.tagActive) { activeNames.push(item.name) }\r\n        return item\r\n    })\r\n\r\n    for (let tagActiveName of activeNames) {\r\n        arrFilter = arrFilter.filter(item => {\r\n            return item.tags.includes(tagActiveName)\r\n        })\r\n    }\r\n\r\n    filmNamesToFilterTags = arrFilter.length === data.length ? [] : arrFilter\r\n    const isHitList = activeNames.length !== 0 ? true : false\r\n    const isMaxTagsError = stateActiveTags.length === 3 && activeNames.length === 3 ? true : false\r\n    dispatch(activeTagNames(arrFilter.slice(0, lengthOfMovieList), filterTagNames, activeNames, isMaxTagsError,\r\n        nextButtonBoolean(arrFilter.length), filmNamesToFilterTags.length, isHitList, ''))\r\n}\r\n\r\nconst nextFilmButton = (films, isNextFilmsButton) => ({ type: GET_NEXT_FILMS, films, isNextFilmsButton })\r\n\r\nexport const nextFilmsButtonThunk = () => async (dispatch, getState) => {\r\n    const response = await data\r\n    const state = getState().filmPage.films\r\n    let filmNames = []\r\n    if (filmNamesToFilterTags.length !== 0) {\r\n        filmNames = filmNamesToFilterTags\r\n    } else if (filmNamesToFilterInput.length !== 0) {\r\n        filmNames = filmNamesToFilterInput\r\n    } else {\r\n        filmNames = response\r\n    }\r\n\r\n    const newState = filmNames.filter(item => !state.includes(item))\r\n\r\n    dispatch(nextFilmButton(newState.slice(0, lengthOfMovieList), nextButtonBoolean(newState.length)))\r\n}\r\n\r\nconst nextButtonBoolean = (arrLength) => {\r\n    return arrLength <= lengthOfMovieList ? false : true\r\n}\r\n\r\nexport default filmReducer;","const GET_BOOKMARKS = '/films/GET_BOOKMARKS'\r\nconst SET_BOOKMARKS = '/films/SET_BOOKMARKS'\r\nconst DELETE_BOOKMARKS = '/films/DELETE_BOOKMARKS'\r\n\r\nconst initialState = {\r\n    bookmarks: []\r\n}\r\n\r\nconst bookmarksReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_BOOKMARKS:\r\n            return {\r\n                ...state,\r\n                bookmarks: action.filmName\r\n            }\r\n        case SET_BOOKMARKS:\r\n            return {\r\n                ...state,\r\n                bookmarks: [\r\n                    ...state.bookmarks,\r\n                     action.filmName\r\n                ]\r\n            }\r\n        case DELETE_BOOKMARKS:\r\n            return {\r\n                ...state,\r\n                bookmarks: deleteFilm(state.bookmarks, action.filmName)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n// const filterBookmarks = (movies, filmName) => {\r\n//     // console.log(movies)\r\n//     // console.log(filmName)\r\n//     return movies.filter(item => {\r\n//         console.log(movies)\r\n//         if(movies === []) {\r\n//             console.log(filmName)\r\n//             return  filmName}\r\n//         if (item.title !== filmName.title) {\r\n            \r\n//             return filmName\r\n//         }\r\n//         // return movies\r\n//     })\r\n// }\r\n\r\n// const deleteFilm = (movies, filmName) => {\r\n//     return movies.filter(item => {\r\n//         return (item.title !== filmName,\r\n//             localStorage.removeItem('localFilmName')\r\n//         )\r\n//     })\r\n// }\r\n\r\n// export const setBookmarksThunk = filmName => async (dispatch, getState) => {\r\n//     const localItem = getState().bookmarksPage.bookmarks\r\n//     let newItem = localItem.filter(item => {\r\n//         if (item !== filmName) {\r\n//             dispatch(setBookmarks(filmName))\r\n//         }\r\n//     })\r\n//     console.log(newItem)\r\n\r\n\r\n\r\n//     // dispatch(setBookmarks(filmName))\r\n// }\r\n\r\nconst setBookmarks = (filmName) => ({ type: SET_BOOKMARKS, filmName })\r\nexport const setBookmarksThunk = filmName => async (dispatch, getState) => {\r\n    const localItem = getState().bookmarksPage.bookmarks\r\n    dispatch(setBookmarks(filmName))\r\n    localStorage.setItem('localFilmName', JSON.stringify(localItem))\r\n}\r\n\r\nconst getBookmarks = (filmName) => ({ type: GET_BOOKMARKS, filmName })\r\nexport const getBookmarksThunk = () => (dispatch) => {\r\n    const itemName = JSON.parse(localStorage.getItem('localFilmName'))\r\n    if (itemName) {\r\n        dispatch(getBookmarks(itemName))\r\n    }\r\n}\r\n\r\nconst deleteBookmarks = (filmName) => ({ type: DELETE_BOOKMARKS, filmName })\r\nconst deleteFilm = (movies, filmName) => {\r\n    return movies.filter(item => {\r\n        return (item.title !== filmName.title,\r\n            localStorage.removeItem('localFilmName')\r\n        )\r\n    })\r\n}\r\nexport const deleteBookmarksThunk = (filmName) => dispatch => {\r\n    dispatch(deleteBookmarks(filmName))\r\n\r\n}\r\n\r\nexport default bookmarksReducer;","import React, { useState } from \"react\";\r\nimport classes from \"../../styles/styles.module.scss\";\r\n\r\nconst PaginationTag = ({ tagNames, tagFilmsThunk, portionSize = 6, ...props }) => {\r\n  let [portionNumber, setPortionNumber] = useState(1)\r\n  let leftPortionTagNumber = (portionNumber - 1) * portionSize + 1\r\n  let rightPortionTagNumber = portionNumber * portionSize\r\n\r\n  return (\r\n    <div>\r\n      {leftPortionTagNumber > 1 && <span className={`${classes.tagStyle} ${classes.tagStyleButton}`} \r\n      onClick={()=>setPortionNumber(portionNumber - 1)} >НАЗАД</span>}\r\n\r\n      {tagNames\r\n      .filter(item => item.id >= leftPortionTagNumber && item.id <= rightPortionTagNumber)\r\n      .map(item => {\r\n        return (\r\n          <span\r\n            className={\r\n              item.tagActive\r\n                ? `${classes.tagStyle} ${classes.tagStyleActive}`\r\n                : classes.tagStyle\r\n            }\r\n            key={item.id}\r\n            onClick={() => tagFilmsThunk(item.name)}\r\n          >\r\n            {item.name}\r\n          </span>\r\n          \r\n        );\r\n      })}\r\n\r\n      {rightPortionTagNumber < tagNames.length && <span className={`${classes.tagStyle} ${classes.tagStyleButton}`} \r\n      onClick={()=>setPortionNumber(portionNumber + 1)} >ДАЛЕЕ</span>}\r\n\r\n      {props.isMaxTagsError && <div className={classes.maxTagsError} >Выбрано максимум 3 тега!</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationTag;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getFilmsThunk,\r\n  filterFilmBody,\r\n  activeTagFilmsThunk,\r\n  nextFilmsButtonThunk\r\n} from \"../../redux/reducers/filmReducer\";\r\n\r\nimport classes from \"../../styles/styles.module.scss\";\r\nimport { Input } from \"antd\";\r\nimport { setBookmarksThunk } from \"../../redux/reducers/bookmarksReducer\";\r\nimport PaginationTag from \"../PaginationTag/PaginationTag.jsx\";\r\n\r\nclass FilmContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getFilmsThunk();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // console.log(this.props.films);\r\n    // console.log(this.props.isHitList);\r\n    // console.log(this.props.inputTextValue);\r\n    // console.log(this.props.tagNames);\r\n    // console.log(this.props.activeTagsName);\r\n    // console.log(this.props.isMaxTagsError);\r\n  }\r\n\r\n  onInputText = ev => {\r\n    const body = ev.target.value;\r\n    this.props.filterFilmBody(body);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Input\r\n          placeholder=\"Введите название фильма\"\r\n          value={this.props.inputTextValue}\r\n          onChange={this.onInputText}\r\n        />\r\n        <PaginationTag\r\n          tagNames={this.props.tagNames}\r\n          tagFilmsThunk={this.props.activeTagFilmsThunk}\r\n          {...this.props}\r\n        />\r\n        {this.props.isHitList && <div>Найдено совпадений: {this.props.hitList}</div> }\r\n        {this.props.films.map(item => {\r\n          return (\r\n            <div key={item.title}>\r\n              {item.title}\r\n              <button\r\n                onClick={() => {\r\n                  this.props.setBookmarksThunk(item);\r\n                }}\r\n              >\r\n                ☆\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div>\r\n          {this.props.isNextFilmsButton && (\r\n            <button onClick={this.props.nextFilmsButtonThunk}>Показать еще</button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    films: state.filmPage.films,\r\n    isNextFilmsButton: state.filmPage.isNextFilmsButton,\r\n    inputTextValue: state.filmPage.inputTextValue,\r\n    tagNames: state.filmPage.tagNames,\r\n    activeTagsName: state.filmPage.activeTagsName,\r\n    hitList: state.filmPage.hitList,\r\n    isHitList: state.filmPage.isHitList,\r\n    isMaxTagsError: state.filmPage.isMaxTagsError\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getFilmsThunk,\r\n  setBookmarksThunk,\r\n  filterFilmBody,\r\n  activeTagFilmsThunk,\r\n  nextFilmsButtonThunk\r\n})(FilmContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getBookmarksThunk, deleteBookmarksThunk } from \"../../redux/reducers/bookmarksReducer\";\r\n\r\nclass Bookmarks extends React.Component {\r\n  componentDidMount(){\r\n    this.props.getBookmarksThunk()\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    // console.log(this.props.bookmarks)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.bookmarks.length > 0 && this.props.bookmarks.map(item => {\r\n          return (\r\n            <div key={item.title}>\r\n              {item.title}\r\n              <button onClick={() => this.props.deleteBookmarksThunk(item)}>\r\n                ☆\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n        <button>Показать еще</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    bookmarks: state.bookmarksPage.bookmarks\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,{getBookmarksThunk, deleteBookmarksThunk})(Bookmarks);\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport { Route, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport FilmContainer from './components/Film/FilmContainer.jsx'\nimport Bookmarks from './components/Bookmarks/Bookmarks.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div>\n        <Switch>\n          <Route exact path=\"/\"><Redirect to=\"/films\" /></Route>\n          <Route path='/films' render={() => <FilmContainer />} />\n          <Route path='/bookmarks' render={() => <Bookmarks />} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport filmReducer from \"./reducers/filmReducer\";\r\nimport bookmarksReducer from \"./reducers/bookmarksReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  filmPage: filmReducer,\r\n  bookmarksPage: bookmarksReducer,\r\n});\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/reduxStore\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"styles_item__BHFkE\",\"active\":\"styles_active__3gQU6\",\"tagStyle\":\"styles_tagStyle__2RCl8\",\"tagStyleActive\":\"styles_tagStyleActive__2A714\",\"tagStyleButton\":\"styles_tagStyleButton__1i3db\",\"maxTagsError\":\"styles_maxTagsError__2zouh\"};"],"sourceRoot":""}