{"version":3,"sources":["components/Header/Header.jsx","redux/reducers/filmReducer.ts","components/PaginationTag/PaginationTag.jsx","components/MoviesList/MoviesList.jsx","components/Movies/Movies.jsx","redux/reducers/bookmarksReducer.ts","components/Bookmarks/Bookmarks.jsx","App.js","serviceWorker.js","redux/reduxStore.ts","index.js","styles/styles.module.scss"],"names":["Header","className","classes","item","activeClassName","active","to","arrFilterMoviesBody","initialState","films","tagNames","activeTagsName","isMaxTagsError","isNextFilmsButton","inputTextValue","hitList","isHitList","onInputBodyAC","type","payload","inFavorites","activeTagNamesAC","nextButtonBoolean","arrLength","itemName","getLocalItem","JSON","parse","localStorage","getItem","arrFilter","map","localItem","title","isBookmarks","filmReducer","state","action","PaginationTag","tagFilmsThunk","portionSize","props","useState","portionNumber","setPortionNumber","leftPortionTagNumber","rightPortionTagNumber","tagStyle","tagStyleButton","onClick","filter","id","tagActive","tagStyleActive","key","name","length","maxTagsError","MoviesList","filmNames","isFavorites","onNextFilmsButton","Example","OverlayTrigger","placement","overlay","Tooltip","styles","selected","selectedOk","style","margin","width","backgroundColor","content","contentMovies","Button","variant","Movies","onInputText","ev","body","target","value","filterToMoviesThunk","this","getFilmsThunk","placeholder","onChange","fontSize","setBookmarksThunk","nextFilmsButtonThunk","React","Component","connect","filmPage","dispatch","getState","a","data","response","stateActiveTag","stateTags","tags","dataTagItem","slice","filmName","stateFilms","arr","newFilmState","itemValue","push","p","setItem","stringify","boolean","moviesFilterByName","moviesFilterByTag","movies","activeTagNames","tagActiveName","includes","inputBody","toLowerCase","stateActiveTags","stateInputTextValue","moviesByTag","filterFilmsName","stateTagNames","activeItem","moviesByName","filterFilmsByTag","itemFilm","bookmarks","isFavoritesButton","favoritesLength","bookmarksReducer","Bookmarks","getBookmarksThunk","paddingLeft","deleteAllFavoritesThunk","deleteBookmarksThunk","nextFavoritesFilmsThunk","bookmarksPage","newState","window","confirm","removeItem","withRouter","exact","path","render","Boolean","location","hostname","match","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.80d4a3c5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"../../styles/styles.module.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav>\r\n      <div className={classes.item}>\r\n        <NavLink activeClassName={classes.active} to=\"/films\">\r\n          Фильмы\r\n        </NavLink>\r\n        <NavLink activeClassName={classes.active} to=\"/bookmarks\">\r\n          Закладки\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import data from '../../taksnetJSON/films.json'\r\nimport tags from \"../../taksnetJSON/tags.json\";\r\n\r\nconst GET_FILMS = '/films/GET_FILM'\r\nconst TEXT_BODY = '/films/TEXT_BODY'\r\nconst ACTIVE_TAG_NAME = '/film/ACTIVE_TAG_NAME'\r\nconst GET_NEXT_FILMS = '/films/GET_NEXT_FILMS'\r\nconst IS_BOOKMARKS = '/films/IS_BOOKMARKS'\r\n\r\nconst lengthOfMovieList: number = 15\r\nlet arrFilterMoviesBody = [] as Array<filmsType>\r\n\r\n\r\ntype filmsType = {\r\n    title: string\r\n    tags: Array<string>\r\n    isBookmarks: boolean\r\n}\r\ntype tagNamesType = {\r\n    name: string\r\n    tagActive: boolean\r\n    id: number\r\n}\r\nconst initialState = {\r\n    films: [] as Array<filmsType>,\r\n    tagNames: [] as Array<tagNamesType>,\r\n    activeTagsName: [] as Array<string>,\r\n    isMaxTagsError: false as boolean,\r\n    isNextFilmsButton: false as boolean,\r\n    inputTextValue: '' as string,\r\n    hitList: 0 as number,\r\n    isHitList: false as boolean\r\n}\r\ntype initialStateType = typeof initialState\r\n\r\nconst filmReducer = (state = initialState, action: any): initialStateType => {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n        case TEXT_BODY:\r\n        case ACTIVE_TAG_NAME:\r\n        case IS_BOOKMARKS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case GET_NEXT_FILMS:\r\n            return {\r\n                ...state,\r\n                films: [\r\n                    ...state.films,\r\n                    ...action.films\r\n                ],\r\n                isNextFilmsButton: action.isNextFilmsButton\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype getFilmsActionType = { type: typeof GET_FILMS, payload: { films: Array<filmsType>, tagNames: Array<tagNamesType>, isNextFilmsButton: boolean } }\r\nconst getFilmsAC = (films: Array<filmsType>, tagNames: Array<tagNamesType>, isNextFilmsButton: boolean): getFilmsActionType =>\r\n    ({ type: GET_FILMS, payload: { films: inFavorites(films), tagNames, isNextFilmsButton } })\r\n\r\nexport const getFilmsThunk = () => async (dispatch: any, getState: any) => {\r\n    const response = !arrFilterMoviesBody.length ? await data : arrFilterMoviesBody\r\n    const stateActiveTag = getState().filmPage.activeTagsName \r\n    const stateTags = getState().filmPage.tagNames \r\n\r\n    let id = 0\r\n    const dataTagItem = !stateActiveTag.length ? await tags.map((item) => {\r\n        id++\r\n        return ({ name: item, tagActive: false, id })\r\n    }) : stateTags\r\n\r\n    dispatch(getFilmsAC(response.slice(0, lengthOfMovieList) as Array<filmsType>, dataTagItem as Array<tagNamesType>, nextButtonBoolean(response.length)))\r\n}\r\n\r\n\r\ntype onInputBodyActionType = { type: typeof TEXT_BODY, payload: { films: Array<filmsType>, inputTextValue: string, isNextFilmsButton: boolean, hitList: number, isHitList: boolean } }\r\nconst onInputBodyAC = (films: Array<filmsType>, inputTextValue: string, isNextFilmsButton: boolean, hitList: number, isHitList: boolean): onInputBodyActionType => ({\r\n    type: TEXT_BODY,\r\n    payload: { films: inFavorites(films), inputTextValue, isNextFilmsButton, hitList, isHitList }\r\n})\r\n\r\ntype activeTagNamesActionType = { type: typeof ACTIVE_TAG_NAME, payload: { films: Array<filmsType>, tagNames: Array<tagNamesType>, activeTagsName: Array<string>, isMaxTagsError: boolean, isNextFilmsButton: boolean, hitList: number, isHitList: boolean } }\r\nconst activeTagNamesAC = (films: Array<filmsType>, tagNames: Array<tagNamesType>, activeTagsName: Array<string>,\r\n    isMaxTagsError: boolean, isNextFilmsButton: boolean, hitList: number, isHitList: boolean): activeTagNamesActionType => ({\r\n        type: ACTIVE_TAG_NAME,\r\n        payload: { films: inFavorites(films), tagNames, activeTagsName, isMaxTagsError, isNextFilmsButton, hitList, isHitList }\r\n    })\r\n\r\nexport const filterToMoviesThunk = (body: string, boolean: boolean) => async (dispatch: any, getState: any) => {\r\n    const response = await data\r\n    const stateActiveTags = getState().filmPage.activeTagsName\r\n    const stateInputTextValue = getState().filmPage.inputTextValue\r\n\r\n    if (boolean === true) {\r\n        const moviesByTag = moviesFilterByTag(response as Array<filmsType>, stateActiveTags)\r\n        const filterFilmsName = moviesFilterByName(moviesByTag, body)\r\n\r\n        dispatch(onInputBodyAC(filterFilmsName.slice(0, lengthOfMovieList), body,\r\n            nextButtonBoolean(filterFilmsName.length), filterFilmsName.length, isHitList(filterFilmsName)))\r\n    } else {\r\n        let stateTagNames = getState().filmPage.tagNames as Array<tagNamesType>\r\n        let activeTagNames = [] as Array<string>\r\n\r\n        stateTagNames = stateTagNames.map(item => {\r\n            if (item.name === body) {\r\n                let activeItem = !item.tagActive && stateActiveTags.length < 3 ? true : false\r\n                if (activeItem) { activeTagNames.push(item.name) }\r\n                return { ...item, tagActive: activeItem };\r\n            }\r\n            if (item.tagActive) { activeTagNames.push(item.name) }\r\n            return item\r\n        })\r\n\r\n        const moviesByName = moviesFilterByName(response as Array<filmsType>, stateInputTextValue)\r\n        const filterFilmsByTag = moviesFilterByTag(moviesByName, activeTagNames)\r\n\r\n        const isMaxTagsError = stateActiveTags.length === 3 && activeTagNames.length === 3 ? true : false\r\n        dispatch(activeTagNamesAC(filterFilmsByTag.slice(0, lengthOfMovieList), stateTagNames, activeTagNames, isMaxTagsError,\r\n            nextButtonBoolean(filterFilmsByTag.length), filterFilmsByTag.length, isHitList(filterFilmsByTag)))\r\n    }\r\n\r\n    function moviesFilterByName(movies: Array<filmsType>, inputBody: string = '') {\r\n        return movies.filter(item => {\r\n            return item.title.toLowerCase().includes(inputBody)\r\n        })\r\n    }\r\n\r\n    function moviesFilterByTag(movies: Array<filmsType>, activeTagNames: Array<string>) {\r\n        let films = movies\r\n        for (let tagActiveName of activeTagNames) {\r\n            films = films.filter(item => {\r\n                return item.tags.includes(tagActiveName)\r\n            })\r\n        }\r\n        return films\r\n    }\r\n\r\n    function isHitList(arr: Array<filmsType>) {\r\n        if (arr.length === response.length) {\r\n            arrFilterMoviesBody = []\r\n            return false\r\n        } else {\r\n            arrFilterMoviesBody = arr\r\n            return true\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\ntype nextFilmButtonActionType = { type: typeof GET_NEXT_FILMS, films: Array<filmsType>, isNextFilmsButton: boolean }\r\nconst nextFilmButtonAC = (films: Array<filmsType>, isNextFilmsButton: boolean): nextFilmButtonActionType => ({ type: GET_NEXT_FILMS, films: inFavorites(films), isNextFilmsButton })\r\n\r\nexport const nextFilmsButtonThunk = () => async (dispatch: any, getState: any) => {\r\n    let state = getState().filmPage.films as Array<filmsType>\r\n    let filmNames = !arrFilterMoviesBody.length ? await data : arrFilterMoviesBody\r\n\r\n    state.map(itemFilm => {\r\n        filmNames = filmNames.filter(item => item.title !== itemFilm.title)\r\n    })\r\n\r\n    dispatch(nextFilmButtonAC(filmNames.slice(0, lengthOfMovieList) as Array<filmsType>, nextButtonBoolean(filmNames.length)))\r\n}\r\n\r\n\r\n\r\ntype isBookmarksStateActionType = { type: typeof IS_BOOKMARKS, payload: { films: Array<filmsType> } }\r\nconst isBookmarksStateAC = (films: Array<filmsType>): isBookmarksStateActionType => ({ type: IS_BOOKMARKS, payload: { films } })\r\n\r\nexport const setBookmarksThunk = (filmName: filmsType) => async (dispatch: any, getState: any) => {\r\n    const stateFilms = getState().filmPage.films as Array<filmsType>\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies') || '[]') as Array<filmsType>\r\n    let arr = getLocalItem as Array<filmsType>\r\n\r\n    const newFilmState = stateFilms.map(item => {\r\n        if (item.title === filmName.title) {\r\n            const isBookmarks = item.isBookmarks ? false : true\r\n            const itemValue = { ...item, isBookmarks }\r\n            isBookmarks === true ? arr.push(itemValue) :\r\n                arr = arr.filter(p => p.title !== item.title)\r\n            return itemValue\r\n        }\r\n        return item\r\n    })\r\n\r\n    dispatch(isBookmarksStateAC(newFilmState))\r\n    localStorage.setItem('Movies', JSON.stringify(arr))\r\n}\r\n\r\nconst nextButtonBoolean = (arrLength: number) => {\r\n    return arrLength <= lengthOfMovieList ? false : true\r\n}\r\n\r\nconst inFavorites = (itemName: Array<filmsType>) => {\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies') || '[]') as Array<filmsType>\r\n    let arrFilter = itemName\r\n\r\n    getLocalItem.map(localItem => {\r\n        arrFilter = arrFilter.map(item => {\r\n            if (item.title === localItem.title) {\r\n                return { ...item, isBookmarks: true }\r\n            }\r\n            return item\r\n        })\r\n    })\r\n    return arrFilter\r\n}\r\n\r\nexport default filmReducer;","import React, { useState } from \"react\";\r\nimport classes from \"../../styles/styles.module.scss\";\r\n\r\nconst PaginationTag = ({\r\n  tagNames,\r\n  tagFilmsThunk,\r\n  portionSize = 6,\r\n  ...props\r\n}) => {\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionTagNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionTagNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div>\r\n      {leftPortionTagNumber > 1 && (\r\n        <span\r\n          className={`${classes.tagStyle} ${classes.tagStyleButton}`}\r\n          onClick={() => setPortionNumber(portionNumber - 1)}\r\n        >\r\n          НАЗАД\r\n        </span>\r\n      )}\r\n\r\n      {tagNames\r\n        .filter(\r\n          item =>\r\n            item.id >= leftPortionTagNumber && item.id <= rightPortionTagNumber\r\n        )\r\n        .map(item => {\r\n          return (\r\n            <span\r\n              className={\r\n                item.tagActive\r\n                  ? `${classes.tagStyle} ${classes.tagStyleActive}`\r\n                  : classes.tagStyle\r\n              }\r\n              key={item.id}\r\n              onClick={() => tagFilmsThunk(item.name)}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          );\r\n        })}\r\n\r\n      {rightPortionTagNumber < tagNames.length && (\r\n        <span\r\n          className={`${classes.tagStyle} ${classes.tagStyleButton}`}\r\n          onClick={() => setPortionNumber(portionNumber + 1)}\r\n        >\r\n          ДАЛЕЕ\r\n        </span>\r\n      )}\r\n\r\n      {props.isMaxTagsError && (\r\n        <div\r\n        className={classes.maxTagsError}\r\n        >\r\n          Выбрано максимум 3 тега !\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationTag;\r\n","import React from \"react\";\r\nimport styles from \"../../styles/styles.module.scss\";\r\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nconst MoviesList = ({\r\n  filmNames,\r\n  isFavorites,\r\n  isNextFilmsButton,\r\n  onNextFilmsButton\r\n}) => {\r\n  const Example = ({ item }) => (\r\n    <OverlayTrigger\r\n      key=\"right\"\r\n      placement=\"right\"\r\n      overlay={\r\n        <Tooltip>\r\n          {item.isBookmarks ? \"Удалить из закладок\" : \"Добавить в избранное\"}\r\n        </Tooltip>\r\n      }\r\n    >\r\n      <span\r\n        className={styles.selected}\r\n        onClick={() => {\r\n          isFavorites(item);\r\n        }}\r\n      >\r\n        {item.isBookmarks ? (\r\n          <div className={styles.selectedOk}>★</div>\r\n        ) : (\r\n          <div>☆</div>\r\n        )}\r\n      </span>\r\n    </OverlayTrigger>\r\n  );\r\n\r\n  return (\r\n    <div style={{ margin: \"8px\" }}>\r\n      {filmNames.map(item => {\r\n        return (\r\n          <div\r\n            className=\"card mx-auto\"\r\n            style={{\r\n              width: \"480px\",\r\n              margin: \"1px\",\r\n              backgroundColor: \"rgb(235, 235, 235)\"\r\n            }}\r\n            key={item.title}\r\n          >\r\n            <h5 className={styles.content}>\r\n              <span className={styles.contentMovies}>{item.title}</span>\r\n\r\n              <Example item={item} />\r\n            </h5>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {isNextFilmsButton && (\r\n        <Button\r\n          style={{ width: \"480px\", margin: \"5px\" }}\r\n          variant=\"secondary\"\r\n          onClick={onNextFilmsButton}\r\n        >\r\n          Показать еще\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getFilmsThunk,\r\n  filterToMoviesThunk,\r\n  nextFilmsButtonThunk,\r\n  setBookmarksThunk\r\n} from \"../../redux/reducers/filmReducer.ts\";\r\nimport { Input } from \"antd\";\r\nimport PaginationTag from \"../PaginationTag/PaginationTag.jsx\";\r\nimport MoviesList from \"../MoviesList/MoviesList\";\r\n\r\nclass Movies extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getFilmsThunk();\r\n  }\r\n\r\n  onInputText = ev => {\r\n    const body = ev.target.value;\r\n    this.props.filterToMoviesThunk(body, true);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Input\r\n          style={{ width: \"480px\", margin: \"5px\" }}\r\n          placeholder=\" Поиск фильма по названию\"\r\n          value={this.props.inputTextValue}\r\n          onChange={this.onInputText}\r\n        />\r\n\r\n        <PaginationTag\r\n          tagNames={this.props.tagNames}\r\n          tagFilmsThunk={this.props.filterToMoviesThunk}\r\n          {...this.props}\r\n        />\r\n\r\n        {this.props.isHitList && (\r\n          <div\r\n            className=\"card mx-auto\"\r\n            style={{\r\n              width: \"480px\",\r\n              margin: \"3px\",\r\n              backgroundColor: \"rgb(235, 235, 235)\",\r\n              fontSize: \"17px\"\r\n            }}\r\n          >\r\n            Найдено совпадений: {this.props.hitList}\r\n          </div>\r\n        )}\r\n\r\n        <MoviesList\r\n          filmNames={this.props.films}\r\n          isFavorites={this.props.setBookmarksThunk}\r\n          isNextFilmsButton={this.props.isNextFilmsButton}\r\n          onNextFilmsButton={this.props.nextFilmsButtonThunk}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    films: state.filmPage.films,\r\n    isNextFilmsButton: state.filmPage.isNextFilmsButton,\r\n    inputTextValue: state.filmPage.inputTextValue,\r\n    tagNames: state.filmPage.tagNames,\r\n    activeTagsName: state.filmPage.activeTagsName,\r\n    hitList: state.filmPage.hitList,\r\n    isHitList: state.filmPage.isHitList,\r\n    isMaxTagsError: state.filmPage.isMaxTagsError\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getFilmsThunk,\r\n  setBookmarksThunk,\r\n  filterToMoviesThunk,\r\n  nextFilmsButtonThunk\r\n})(Movies);\r\n","const GET_BOOKMARKS = '/bookmarks/GET_BOOKMARKS'\r\nconst DELETE_BOOKMARKS = '/bookmarks/DELETE_BOOKMARKS'\r\nconst NEXT_FAVORITES_FILMS = '/bookmarks/NEXT_FAVORITES_FILMS'\r\nconst DELETE_ALL_FAVORITES = '/bookmarks/DELETE_ALL_FAVORITES'\r\n\r\nconst lengthOfMovieList = 15\r\n\r\ntype bookmarksType = {\r\n    title: string\r\n    tags: Array<string>\r\n    isBookmarks: boolean\r\n}\r\nconst initialState = {\r\n    bookmarks: [] as Array<bookmarksType>,\r\n    isFavoritesButton: false as boolean,\r\n    favoritesLength: 0 as number\r\n}\r\ntype initialStateType = typeof initialState\r\n\r\nconst bookmarksReducer = (state = initialState, action: any): initialStateType => {\r\n    switch (action.type) {\r\n        case GET_BOOKMARKS:\r\n        case DELETE_BOOKMARKS:\r\n        case DELETE_ALL_FAVORITES:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case NEXT_FAVORITES_FILMS:\r\n            return {\r\n                ...state,\r\n                bookmarks: [\r\n                    ...state.bookmarks,\r\n                    ...action.bookmarks\r\n                ],\r\n                isFavoritesButton: action.isFavoritesButton\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\ntype getBookmarksActionType = {\r\n    type: typeof GET_BOOKMARKS,\r\n    payload: { bookmarks: Array<bookmarksType>, isFavoritesButton: boolean, favoritesLength: number }\r\n}\r\nconst getBookmarksAC = (bookmarks: Array<bookmarksType>, isFavoritesButton: boolean, favoritesLength: number): getBookmarksActionType => ({\r\n    type: GET_BOOKMARKS,\r\n    payload: { bookmarks, isFavoritesButton, favoritesLength }\r\n})\r\n\r\nexport const getBookmarksThunk = () => (dispatch: any) => {\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies') || '[]') as Array<bookmarksType>\r\n    dispatch(getBookmarksAC(getLocalItem.slice(0, lengthOfMovieList), nextButtonBoolean(getLocalItem.length), getLocalItem.length))\r\n}\r\n\r\n\r\n\r\ntype deleteBookmarksActionType = {\r\n    type: typeof DELETE_BOOKMARKS,\r\n    payload: { bookmarks: Array<bookmarksType>, isFavoritesButton: boolean, favoritesLength: number }\r\n}\r\nconst deleteBookmarks = (bookmarks: Array<bookmarksType>, isFavoritesButton: boolean, favoritesLength: number): deleteBookmarksActionType => ({\r\n    type: DELETE_BOOKMARKS,\r\n    payload: { bookmarks, isFavoritesButton, favoritesLength }\r\n})\r\n\r\nexport const deleteBookmarksThunk = (filmName: bookmarksType) => (dispatch: any) => {\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies') || '[]') as Array<bookmarksType>\r\n    const newState = getLocalItem.filter(item => item.title !== filmName.title)\r\n    localStorage.setItem('Movies', JSON.stringify(newState))\r\n    dispatch(deleteBookmarks(newState.slice(0, lengthOfMovieList), nextButtonBoolean(newState.length), newState.length))\r\n}\r\n\r\n\r\n\r\ntype nextFavoritesFilmsActionType = { type: typeof NEXT_FAVORITES_FILMS, bookmarks: Array<bookmarksType>, isFavoritesButton: boolean }\r\nconst nextFavoritesFilmsAC = (bookmarks: Array<bookmarksType>, isFavoritesButton: boolean): nextFavoritesFilmsActionType =>\r\n    ({ type: NEXT_FAVORITES_FILMS, bookmarks, isFavoritesButton })\r\n\r\nexport const nextFavoritesFilmsThunk = () => (dispatch: any, getState: any) => {\r\n    let getLocalItem = JSON.parse(localStorage.getItem('Movies') || '[]') as Array<bookmarksType>\r\n    const state: Array<bookmarksType> = getState().bookmarksPage.bookmarks\r\n\r\n    state.map(itemFilm => {\r\n        getLocalItem = getLocalItem.filter(item => item.title !== itemFilm.title)\r\n    })\r\n\r\n    dispatch(nextFavoritesFilmsAC(getLocalItem.slice(0, lengthOfMovieList), nextButtonBoolean(getLocalItem.length)))\r\n}\r\n\r\nconst nextButtonBoolean = (arrLength: number) => {\r\n    return arrLength <= lengthOfMovieList ? false : true\r\n}\r\n\r\n\r\n\r\ntype deleteAllFavoritesActionType = {\r\n    type: typeof DELETE_ALL_FAVORITES,\r\n    payload: { bookmarks: Array<bookmarksType>, isFavoritesButton: boolean, favoritesLength: number }\r\n}\r\nconst deleteAllFavoritesAC = (bookmarks: Array<bookmarksType>, isFavoritesButton: boolean, favoritesLength: number): deleteAllFavoritesActionType => ({\r\n    type: DELETE_ALL_FAVORITES,\r\n    payload: { bookmarks, isFavoritesButton, favoritesLength }\r\n})\r\n\r\nexport const deleteAllFavoritesThunk = () => (dispatch: any) => {\r\n    const removeLocalStorage = window.confirm('Вы уверены, что хотите очистить список?')\r\n    if (removeLocalStorage) {\r\n        localStorage.removeItem('Movies');\r\n        dispatch(deleteAllFavoritesAC([], false, 0))\r\n    }\r\n}\r\n\r\nexport default bookmarksReducer;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getBookmarksThunk,\r\n  deleteBookmarksThunk,\r\n  nextFavoritesFilmsThunk,\r\n  deleteAllFavoritesThunk\r\n} from \"../../redux/reducers/bookmarksReducer.ts\";\r\nimport MoviesList from \"../MoviesList/MoviesList\";\r\n\r\nclass Bookmarks extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getBookmarksThunk();\r\n  }\r\n\r\n  componentDidUpdate(){\r\n  //  console.log(this.props.bookmarks)\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      width: \"480px\",\r\n      margin: \"5px\",\r\n      fontSize: \"18px\",\r\n      paddingLeft: this.props.favoritesLength !== 0 ? \"100px\" : \"0px\",\r\n      backgroundColor: \"rgb(235, 235, 235)\"\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card mx-auto\" style={style}>\r\n          {this.props.favoritesLength !== 0 ? (\r\n            <div>\r\n              Фильмов в избранном: {this.props.favoritesLength}\r\n              <button\r\n                className=\"btn btn-danger btn-sm float-right\"\r\n                onClick={this.props.deleteAllFavoritesThunk}\r\n              >\r\n                Очистить список\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div>Вы не выбрали ни одного фильма</div>\r\n          )}\r\n        </div>\r\n\r\n        <MoviesList\r\n          filmNames={this.props.bookmarks}\r\n          isFavorites={this.props.deleteBookmarksThunk}\r\n          isNextFilmsButton={this.props.isFavoritesButton}\r\n          onNextFilmsButton={this.props.nextFavoritesFilmsThunk}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    bookmarks: state.bookmarksPage.bookmarks,\r\n    isFavoritesButton: state.bookmarksPage.isFavoritesButton,\r\n    favoritesLength: state.bookmarksPage.favoritesLength\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getBookmarksThunk,\r\n  deleteBookmarksThunk,\r\n  nextFavoritesFilmsThunk,\r\n  deleteAllFavoritesThunk\r\n})(Bookmarks);\r\n","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport { Route, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport Movies from './components/Movies/Movies.jsx'\nimport Bookmarks from './components/Bookmarks/Bookmarks.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div>\n        <Switch>\n          <Route exact path=\"/\"><Redirect to=\"/films\" /></Route>\n          <Route path='/films' render={() => <Movies />} />\n          <Route path='/bookmarks' render={() => <Bookmarks />} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport filmReducer from \"./reducers/filmReducer\";\r\nimport bookmarksReducer from \"./reducers/bookmarksReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  filmPage: filmReducer,\r\n  bookmarksPage: bookmarksReducer,\r\n});\r\n\r\ntype rootReducerType = typeof rootReducer\r\nexport type stateType = ReturnType<rootReducerType>\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/reduxStore.ts\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"styles_item__BHFkE\",\"active\":\"styles_active__3gQU6\",\"tagStyle\":\"styles_tagStyle__2RCl8\",\"tagStyleActive\":\"styles_tagStyleActive__2A714\",\"tagStyleButton\":\"styles_tagStyleButton__1i3db\",\"maxTagsError\":\"styles_maxTagsError__2zouh\",\"content\":\"styles_content__25RYv\",\"contentMovies\":\"styles_contentMovies__1C2sK\",\"selected\":\"styles_selected__1YvCo\",\"selectedOk\":\"styles_selectedOk__I4ovq\"};"],"sourceRoot":""}