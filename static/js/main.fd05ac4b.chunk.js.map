{"version":3,"sources":["components/Header/Header.jsx","redux/reducers/filmReducer.js","components/PaginationTag/PaginationTag.jsx","components/MoviesList/MoviesList.jsx","components/Movies/Movies.jsx","redux/reducers/bookmarksReducer.js","components/Bookmarks/Bookmarks.jsx","App.js","serviceWorker.js","redux/reduxStore.js","index.js","styles/styles.module.scss"],"names":["Header","className","classes","item","activeClassName","active","to","arrFilterMoviesBody","initialState","films","tagNames","activeTagsName","isMaxTagsError","isNextFilmsButton","inputTextValue","hitList","isHitList","getFilmsAC","type","payload","inFavorites","onInputBodyAC","activeTagNamesAC","nextButtonBoolean","arrLength","itemName","getLocalItem","JSON","parse","localStorage","getItem","arrFilter","map","localItem","title","isBookmarks","filmReducer","state","action","PaginationTag","tagFilmsThunk","portionSize","props","useState","portionNumber","setPortionNumber","leftPortionTagNumber","rightPortionTagNumber","tagStyle","tagStyleButton","onClick","filter","id","tagActive","tagStyleActive","key","name","length","maxTagsError","MoviesList","filmNames","isFavorites","onNextFilmsButton","Example","OverlayTrigger","placement","overlay","Tooltip","styles","selected","selectedOk","style","margin","width","backgroundColor","content","contentMovies","Button","variant","Movies","onInputText","ev","body","target","value","filterToMoviesThunk","this","getFilmsThunk","placeholder","onChange","fontSize","setBookmarksThunk","nextFilmsButtonThunk","React","Component","connect","filmPage","textBody","dispatch","a","data","response","tags","responseTags","dataTagItem","slice","filmName","getState","stateFilms","arr","push","newFilmState","itemValue","p","setItem","stringify","boolean","moviesFilterByName","moviesFilterByTag","movies","activeTagNames","tagActiveName","includes","inputBody","toLowerCase","stateActiveTags","stateInputTextValue","moviesByTag","filterFilmsName","stateTagNames","activeItem","moviesByName","filterFilmsByTag","itemFilm","bookmarks","isFavoritesButton","favoritesLength","bookmarksReducer","Bookmarks","getBookmarksThunk","paddingLeft","deleteAllFavoritesThunk","deleteBookmarksThunk","nextFavoritesFilmsThunk","bookmarksPage","newState","removeItem","withRouter","exact","path","render","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.fd05ac4b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"../../styles/styles.module.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav>\r\n      <div className={classes.item}>\r\n        <NavLink activeClassName={classes.active} to=\"/films\">\r\n          Фильмы\r\n        </NavLink>\r\n        <NavLink activeClassName={classes.active} to=\"/bookmarks\">\r\n          Закладки\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import data from '../../taksnetJSON/films.json'\r\nimport tags from \"../../taksnetJSON/tags.json\";\r\n\r\nconst GET_FILMS = '/films/GET_FILM'\r\nconst TEXT_BODY = '/films/TEXT_BODY'\r\nconst ACTIVE_TAG_NAME = '/film/ACTIVE_TAG_NAME'\r\nconst GET_NEXT_FILMS = '/films/GET_NEXT_FILMS'\r\nconst IS_BOOKMARKS = '/films/IS_BOOKMARKS'\r\n\r\nconst lengthOfMovieList = 15\r\nlet arrFilterMoviesBody = []\r\n\r\nconst initialState = {\r\n    films: [],\r\n    tagNames: [],\r\n    activeTagsName: [],\r\n    isMaxTagsError: false,\r\n    isNextFilmsButton: false,\r\n    inputTextValue: '',\r\n    hitList: 0,\r\n    isHitList: false\r\n}\r\n\r\nconst filmReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_FILMS:\r\n        case TEXT_BODY:\r\n        case ACTIVE_TAG_NAME:\r\n        case IS_BOOKMARKS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case GET_NEXT_FILMS:\r\n            return {\r\n                ...state,\r\n                films: [\r\n                    ...state.films,\r\n                    ...action.films\r\n                ],\r\n                isNextFilmsButton: action.isNextFilmsButton\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getFilmsAC = (films, tagNames, inputTextValue, isNextFilmsButton, hitList, isHitList) =>\r\n    ({ type: GET_FILMS, payload: { films: inFavorites(films), tagNames, inputTextValue, isNextFilmsButton, hitList, isHitList } })\r\n\r\nexport const getFilmsThunk = (textBody, hitList, isHitList) => async (dispatch) => {\r\n    const response = await data\r\n    const responseTags = await tags\r\n\r\n    let id = 0\r\n    const dataTagItem = responseTags.map((item) => {\r\n        id++\r\n        return ({ name: item, tagActive: false, id })\r\n    })\r\n\r\n    dispatch(getFilmsAC(response.slice(0, lengthOfMovieList), dataTagItem, textBody, nextButtonBoolean(data.length), hitList, isHitList))\r\n}\r\n\r\nconst onInputBodyAC = (films, inputTextValue, isNextFilmsButton, hitList, isHitList) => ({\r\n    type: TEXT_BODY,\r\n    payload: { films: inFavorites(films), inputTextValue, isNextFilmsButton, hitList, isHitList }\r\n})\r\n\r\nconst activeTagNamesAC = (films, tagNames, activeTagsName, isMaxTagsError, isNextFilmsButton, hitList, isHitList) => ({\r\n    type: ACTIVE_TAG_NAME,\r\n    payload: { films: inFavorites(films), tagNames, activeTagsName, isMaxTagsError, isNextFilmsButton, hitList, isHitList }\r\n})\r\n\r\nexport const filterToMoviesThunk = (body, boolean) => async (dispatch, getState) => {\r\n    const response = await data\r\n    const stateActiveTags = getState().filmPage.activeTagsName\r\n    const stateInputTextValue = getState().filmPage.inputTextValue\r\n\r\n    if (boolean === true) {\r\n        const moviesByTag = moviesFilterByTag(response, stateActiveTags)\r\n        const filterFilmsName = moviesFilterByName(moviesByTag, body)\r\n\r\n        dispatch(onInputBodyAC(filterFilmsName.slice(0, lengthOfMovieList), body,\r\n            nextButtonBoolean(filterFilmsName.length), filterFilmsName.length, isHitList(filterFilmsName)))\r\n    } else {\r\n        let stateTagNames = getState().filmPage.tagNames\r\n        let activeTagNames = []\r\n        \r\n        stateTagNames = stateTagNames.map(item => {\r\n            if (item.name === body) {\r\n                let activeItem = !item.tagActive && stateActiveTags.length < 3 ? true : false\r\n                if (activeItem) { activeTagNames.push(item.name) }\r\n                return { ...item, tagActive: activeItem };\r\n            }\r\n            if (item.tagActive) { activeTagNames.push(item.name) }\r\n            return item\r\n        })\r\n\r\n        const moviesByName = moviesFilterByName(response, stateInputTextValue)\r\n        const filterFilmsByTag = moviesFilterByTag(moviesByName, activeTagNames)\r\n\r\n        const isMaxTagsError = stateActiveTags.length === 3 && activeTagNames.length === 3 ? true : false\r\n        dispatch(activeTagNamesAC(filterFilmsByTag.slice(0, lengthOfMovieList), stateTagNames, activeTagNames, isMaxTagsError,\r\n            nextButtonBoolean(filterFilmsByTag.length), filterFilmsByTag.length, isHitList(filterFilmsByTag)))\r\n    }\r\n\r\n    function moviesFilterByName(movies, inputBody = '') {\r\n        return movies.filter(item => {\r\n            return item.title.toLowerCase().includes(inputBody)\r\n        })\r\n    }\r\n\r\n    function moviesFilterByTag(movies, activeTagNames) {\r\n        let films = movies\r\n        for (let tagActiveName of activeTagNames) {\r\n            films = films.filter(item => {\r\n                return item.tags.includes(tagActiveName)\r\n            })\r\n        }\r\n        return films\r\n    }\r\n\r\n    function isHitList (arr) {\r\n        if (arr.length === response.length){\r\n            arrFilterMoviesBody = []\r\n            return false\r\n        } else {\r\n            arrFilterMoviesBody = arr\r\n            return true\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst nextFilmButtonAC = (films, isNextFilmsButton) => ({ type: GET_NEXT_FILMS, films: inFavorites(films), isNextFilmsButton })\r\n\r\nexport const nextFilmsButtonThunk = () => async (dispatch, getState) => {\r\n    let state = getState().filmPage.films\r\n    let filmNames = !arrFilterMoviesBody.length ? await data : arrFilterMoviesBody\r\n\r\n    state.map(itemFilm => {\r\n        filmNames = filmNames.filter(item => item.title !== itemFilm.title)\r\n    })\r\n\r\n    dispatch(nextFilmButtonAC(filmNames.slice(0, lengthOfMovieList), nextButtonBoolean(filmNames.length)))\r\n}\r\n\r\nconst isBookmarksStateAC = films => ({ type: IS_BOOKMARKS, payload: { films } })\r\n\r\nexport const setBookmarksThunk = filmName => async (dispatch, getState) => {\r\n    const stateFilms = getState().filmPage.films\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n    let arr = []\r\n\r\n    if (getLocalItem !== null) arr.push(...getLocalItem)\r\n    const newFilmState = stateFilms.map(item => {\r\n        if (item.title === filmName.title) {\r\n            const isBookmarks = item.isBookmarks ? false : true\r\n            const itemValue = { ...item, isBookmarks }\r\n            isBookmarks === true ? arr.push(itemValue) :\r\n                arr = arr.filter(p => p.title !== item.title)\r\n            return itemValue\r\n        }\r\n        return item\r\n    })\r\n\r\n    dispatch(isBookmarksStateAC(newFilmState))\r\n    localStorage.setItem('Movies', JSON.stringify(arr))\r\n}\r\n\r\nconst nextButtonBoolean = (arrLength) => {\r\n    return arrLength <= lengthOfMovieList ? false : true\r\n}\r\n\r\nconst inFavorites = (itemName) => {\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n\r\n    if (getLocalItem !== null) {\r\n        let arrFilter = itemName\r\n        getLocalItem.map(localItem => {\r\n            arrFilter = arrFilter.map(item => {\r\n                if (item.title === localItem.title) {\r\n                    return { ...item, isBookmarks: true }\r\n                }\r\n                return item\r\n            })\r\n        })\r\n        return arrFilter\r\n    }\r\n    else return itemName\r\n}\r\n\r\nexport default filmReducer;","import React, { useState } from \"react\";\r\nimport classes from \"../../styles/styles.module.scss\";\r\n\r\nconst PaginationTag = ({\r\n  tagNames,\r\n  tagFilmsThunk,\r\n  portionSize = 6,\r\n  ...props\r\n}) => {\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionTagNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionTagNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div>\r\n      {leftPortionTagNumber > 1 && (\r\n        <span\r\n          className={`${classes.tagStyle} ${classes.tagStyleButton}`}\r\n          onClick={() => setPortionNumber(portionNumber - 1)}\r\n        >\r\n          НАЗАД\r\n        </span>\r\n      )}\r\n\r\n      {tagNames\r\n        .filter(\r\n          item =>\r\n            item.id >= leftPortionTagNumber && item.id <= rightPortionTagNumber\r\n        )\r\n        .map(item => {\r\n          return (\r\n            <span\r\n              className={\r\n                item.tagActive\r\n                  ? `${classes.tagStyle} ${classes.tagStyleActive}`\r\n                  : classes.tagStyle\r\n              }\r\n              key={item.id}\r\n              onClick={() => tagFilmsThunk(item.name)}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          );\r\n        })}\r\n\r\n      {rightPortionTagNumber < tagNames.length && (\r\n        <span\r\n          className={`${classes.tagStyle} ${classes.tagStyleButton}`}\r\n          onClick={() => setPortionNumber(portionNumber + 1)}\r\n        >\r\n          ДАЛЕЕ\r\n        </span>\r\n      )}\r\n\r\n      {props.isMaxTagsError && (\r\n        <div\r\n        className={classes.maxTagsError}\r\n        >\r\n          Выбрано максимум 3 тега !\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationTag;\r\n","import React from \"react\";\r\nimport styles from \"../../styles/styles.module.scss\";\r\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nconst MoviesList = ({\r\n  filmNames,\r\n  isFavorites,\r\n  isNextFilmsButton,\r\n  onNextFilmsButton\r\n}) => {\r\n  const Example = ({ item }) => (\r\n    <OverlayTrigger\r\n      key=\"right\"\r\n      placement=\"right\"\r\n      overlay={\r\n        <Tooltip>\r\n          {item.isBookmarks ? \"Удалить из закладок\" : \"Добавить в избранное\"}\r\n        </Tooltip>\r\n      }\r\n    >\r\n      <span\r\n        className={styles.selected}\r\n        onClick={() => {\r\n          isFavorites(item);\r\n        }}\r\n      >\r\n        {item.isBookmarks ? (\r\n          <div className={styles.selectedOk}>★</div>\r\n        ) : (\r\n          <div>☆</div>\r\n        )}\r\n      </span>\r\n    </OverlayTrigger>\r\n  );\r\n\r\n  return (\r\n    <div style={{ margin: \"8px\" }}>\r\n      {filmNames.map(item => {\r\n        return (\r\n          <div\r\n            className=\"card mx-auto\"\r\n            style={{\r\n              width: \"480px\",\r\n              margin: \"1px\",\r\n              backgroundColor: \"rgb(235, 235, 235)\"\r\n            }}\r\n            key={item.title}\r\n          >\r\n            <h5 className={styles.content}>\r\n              <span className={styles.contentMovies}>{item.title}</span>\r\n\r\n              <Example item={item} />\r\n            </h5>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {isNextFilmsButton && (\r\n        <Button\r\n          style={{ width: \"480px\", margin: \"5px\" }}\r\n          variant=\"secondary\"\r\n          onClick={onNextFilmsButton}\r\n        >\r\n          Показать еще\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getFilmsThunk,\r\n  filterToMoviesThunk,\r\n  nextFilmsButtonThunk,\r\n  setBookmarksThunk\r\n} from \"../../redux/reducers/filmReducer\";\r\nimport { Input } from \"antd\";\r\nimport PaginationTag from \"../PaginationTag/PaginationTag.jsx\";\r\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport MoviesList from \"../MoviesList/MoviesList\";\r\n\r\nclass Movies extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getFilmsThunk();\r\n  }\r\n\r\n  onInputText = ev => {\r\n    const body = ev.target.value;\r\n    this.props.filterToMoviesThunk(body, true);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Input\r\n          style={{ width: \"480px\", margin: \"5px\" }}\r\n          placeholder=\"Поиск фильма по названию\"\r\n          value={this.props.inputTextValue}\r\n          onChange={this.onInputText}\r\n        />\r\n\r\n        <PaginationTag\r\n          tagNames={this.props.tagNames}\r\n          tagFilmsThunk={this.props.filterToMoviesThunk}\r\n          {...this.props}\r\n        />\r\n\r\n        {this.props.isHitList && (\r\n          <div\r\n            className=\"card mx-auto\"\r\n            style={{\r\n              width: \"480px\",\r\n              margin: \"3px\",\r\n              backgroundColor: \"rgb(235, 235, 235)\",\r\n              fontSize: \"17px\"\r\n            }}\r\n          >\r\n            Найдено совпадений: {this.props.hitList}\r\n          </div>\r\n        )}\r\n\r\n        <MoviesList\r\n          filmNames={this.props.films}\r\n          isFavorites={this.props.setBookmarksThunk}\r\n          isNextFilmsButton={this.props.isNextFilmsButton}\r\n          onNextFilmsButton={this.props.nextFilmsButtonThunk}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    films: state.filmPage.films,\r\n    isNextFilmsButton: state.filmPage.isNextFilmsButton,\r\n    inputTextValue: state.filmPage.inputTextValue,\r\n    tagNames: state.filmPage.tagNames,\r\n    activeTagsName: state.filmPage.activeTagsName,\r\n    hitList: state.filmPage.hitList,\r\n    isHitList: state.filmPage.isHitList,\r\n    isMaxTagsError: state.filmPage.isMaxTagsError\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getFilmsThunk,\r\n  setBookmarksThunk,\r\n  filterToMoviesThunk,\r\n  nextFilmsButtonThunk\r\n})(Movies);\r\n","const GET_BOOKMARKS = '/bookmarks/GET_BOOKMARKS'\r\nconst DELETE_BOOKMARKS = '/bookmarks/DELETE_BOOKMARKS'\r\nconst NEXT_FAVORITES_FILMS = '/bookmarks/NEXT_FAVORITES_FILMS'\r\nconst DELETE_ALL_FAVORITES = '/bookmarks/DELETE_ALL_FAVORITES'\r\n\r\nconst lengthOfMovieList = 15\r\n\r\nconst initialState = {\r\n    bookmarks: [],\r\n    isFavoritesButton: false,\r\n    favoritesLength: 0\r\n}\r\n\r\nconst bookmarksReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_BOOKMARKS:\r\n        case DELETE_BOOKMARKS:\r\n        case DELETE_ALL_FAVORITES:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case NEXT_FAVORITES_FILMS:\r\n            return {\r\n                ...state,\r\n                bookmarks: [\r\n                    ...state.bookmarks,\r\n                    ...action.bookmarks\r\n                ],\r\n                isFavoritesButton: action.isFavoritesButton\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst getBookmarks = (bookmarks, isFavoritesButton, favoritesLength) => ({\r\n    type: GET_BOOKMARKS,\r\n    payload: { bookmarks, isFavoritesButton, favoritesLength }\r\n})\r\nexport const getBookmarksThunk = () => (dispatch) => {\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n    if (getLocalItem !== null) {\r\n        dispatch(getBookmarks(getLocalItem.slice(0, lengthOfMovieList), nextButtonBoolean(getLocalItem), getLocalItem.length))\r\n    }\r\n}\r\n\r\nconst deleteBookmarks = (bookmarks, isFavoritesButton, favoritesLength) => ({\r\n    type: DELETE_BOOKMARKS,\r\n    payload: { bookmarks, isFavoritesButton, favoritesLength }\r\n})\r\n\r\nexport const deleteBookmarksThunk = (filmName) => dispatch => {\r\n    const getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n    const newState = getLocalItem.filter(item => item.title !== filmName.title)\r\n    localStorage.setItem('Movies', JSON.stringify(newState))\r\n    dispatch(deleteBookmarks(newState.slice(0, lengthOfMovieList), nextButtonBoolean(newState), newState.length))\r\n}\r\n\r\nconst nextFavoritesFilms = (bookmarks, isFavoritesButton) => ({ type: NEXT_FAVORITES_FILMS, bookmarks, isFavoritesButton })\r\n\r\nexport const nextFavoritesFilmsThunk = () => (dispatch, getState) => {\r\n    let getLocalItem = JSON.parse(localStorage.getItem('Movies'))\r\n    const state = getState().bookmarksPage.bookmarks\r\n\r\n    state.map(itemFilm => {\r\n        getLocalItem = getLocalItem.filter(item => item.title !== itemFilm.title)\r\n    })\r\n\r\n    dispatch(nextFavoritesFilms(getLocalItem.slice(0, lengthOfMovieList), nextButtonBoolean(getLocalItem)))\r\n}\r\n\r\nconst nextButtonBoolean = (arrLength) => {\r\n    return arrLength.length <= lengthOfMovieList ? false : true\r\n}\r\n\r\nconst deleteAllFavorites = (bookmarks, isFavoritesButton, favoritesLength) => ({\r\n    type: DELETE_ALL_FAVORITES,\r\n    payload: { bookmarks, isFavoritesButton, favoritesLength }\r\n})\r\n\r\nexport const deleteAllFavoritesThunk = () => dispatch => {\r\n    localStorage.removeItem('Movies');\r\n    dispatch(deleteAllFavorites([], false, 0))\r\n}\r\n\r\nexport default bookmarksReducer;","import React from \"react\";\r\nimport styles from \"../../styles/styles.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getBookmarksThunk,\r\n  deleteBookmarksThunk,\r\n  nextFavoritesFilmsThunk,\r\n  deleteAllFavoritesThunk\r\n} from \"../../redux/reducers/bookmarksReducer\";\r\nimport MoviesList from \"../MoviesList/MoviesList\";\r\n\r\nclass Bookmarks extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getBookmarksThunk();\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      width: \"480px\",\r\n      margin: \"5px\",\r\n      fontSize: \"18px\",\r\n      paddingLeft: this.props.favoritesLength !== 0 ? \"100px\" : \"0px\",\r\n      backgroundColor: \"rgb(235, 235, 235)\"\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card mx-auto\" style={style}>\r\n          {this.props.favoritesLength !== 0 ? (\r\n            <div>\r\n              Фильмов в избранном: {this.props.favoritesLength}\r\n              <button\r\n                className=\"btn btn-danger btn-sm float-right\"\r\n                onClick={this.props.deleteAllFavoritesThunk}\r\n              >\r\n                Очистить список\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div>Вы не выбрали ни одного фильма</div>\r\n          )}\r\n        </div>\r\n\r\n        <MoviesList\r\n          filmNames={this.props.bookmarks}\r\n          isFavorites={this.props.deleteBookmarksThunk}\r\n          isNextFilmsButton={this.props.isFavoritesButton}\r\n          onNextFilmsButton={this.props.nextFavoritesFilmsThunk}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    bookmarks: state.bookmarksPage.bookmarks,\r\n    isFavoritesButton: state.bookmarksPage.isFavoritesButton,\r\n    favoritesLength: state.bookmarksPage.favoritesLength\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getBookmarksThunk,\r\n  deleteBookmarksThunk,\r\n  nextFavoritesFilmsThunk,\r\n  deleteAllFavoritesThunk\r\n})(Bookmarks);\r\n","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport { Route, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport Movies from './components/Movies/Movies.jsx'\nimport Bookmarks from './components/Bookmarks/Bookmarks.jsx'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div>\n        <Switch>\n          <Route exact path=\"/\"><Redirect to=\"/films\" /></Route>\n          <Route path='/films' render={() => <Movies />} />\n          <Route path='/bookmarks' render={() => <Bookmarks />} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport filmReducer from \"./reducers/filmReducer\";\r\nimport bookmarksReducer from \"./reducers/bookmarksReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  filmPage: filmReducer,\r\n  bookmarksPage: bookmarksReducer,\r\n});\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/reduxStore\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"styles_item__BHFkE\",\"active\":\"styles_active__3gQU6\",\"tagStyle\":\"styles_tagStyle__2RCl8\",\"tagStyleActive\":\"styles_tagStyleActive__2A714\",\"tagStyleButton\":\"styles_tagStyleButton__1i3db\",\"maxTagsError\":\"styles_maxTagsError__2zouh\",\"content\":\"styles_content__25RYv\",\"contentMovies\":\"styles_contentMovies__1C2sK\",\"selected\":\"styles_selected__1YvCo\",\"selectedOk\":\"styles_selectedOk__I4ovq\"};"],"sourceRoot":""}